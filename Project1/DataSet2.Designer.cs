//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Project1 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet2")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet2 : global::System.Data.DataSet {
        
        private THRM_BAS_LJMDataTable tableTHRM_BAS_LJM;
        
        private THRM_DEPT_LJMDataTable tableTHRM_DEPT_LJM;
        
        private TIEAS_CD_LJMDataTable tableTIEAS_CD_LJM;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DataSet2() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected DataSet2(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["THRM_BAS_LJM"] != null)) {
                    base.Tables.Add(new THRM_BAS_LJMDataTable(ds.Tables["THRM_BAS_LJM"]));
                }
                if ((ds.Tables["THRM_DEPT_LJM"] != null)) {
                    base.Tables.Add(new THRM_DEPT_LJMDataTable(ds.Tables["THRM_DEPT_LJM"]));
                }
                if ((ds.Tables["TIEAS_CD_LJM"] != null)) {
                    base.Tables.Add(new TIEAS_CD_LJMDataTable(ds.Tables["TIEAS_CD_LJM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public THRM_BAS_LJMDataTable THRM_BAS_LJM {
            get {
                return this.tableTHRM_BAS_LJM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public THRM_DEPT_LJMDataTable THRM_DEPT_LJM {
            get {
                return this.tableTHRM_DEPT_LJM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TIEAS_CD_LJMDataTable TIEAS_CD_LJM {
            get {
                return this.tableTIEAS_CD_LJM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet2 cln = ((DataSet2)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["THRM_BAS_LJM"] != null)) {
                    base.Tables.Add(new THRM_BAS_LJMDataTable(ds.Tables["THRM_BAS_LJM"]));
                }
                if ((ds.Tables["THRM_DEPT_LJM"] != null)) {
                    base.Tables.Add(new THRM_DEPT_LJMDataTable(ds.Tables["THRM_DEPT_LJM"]));
                }
                if ((ds.Tables["TIEAS_CD_LJM"] != null)) {
                    base.Tables.Add(new TIEAS_CD_LJMDataTable(ds.Tables["TIEAS_CD_LJM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTHRM_BAS_LJM = ((THRM_BAS_LJMDataTable)(base.Tables["THRM_BAS_LJM"]));
            if ((initTable == true)) {
                if ((this.tableTHRM_BAS_LJM != null)) {
                    this.tableTHRM_BAS_LJM.InitVars();
                }
            }
            this.tableTHRM_DEPT_LJM = ((THRM_DEPT_LJMDataTable)(base.Tables["THRM_DEPT_LJM"]));
            if ((initTable == true)) {
                if ((this.tableTHRM_DEPT_LJM != null)) {
                    this.tableTHRM_DEPT_LJM.InitVars();
                }
            }
            this.tableTIEAS_CD_LJM = ((TIEAS_CD_LJMDataTable)(base.Tables["TIEAS_CD_LJM"]));
            if ((initTable == true)) {
                if ((this.tableTIEAS_CD_LJM != null)) {
                    this.tableTIEAS_CD_LJM.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet2";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet2.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTHRM_BAS_LJM = new THRM_BAS_LJMDataTable();
            base.Tables.Add(this.tableTHRM_BAS_LJM);
            this.tableTHRM_DEPT_LJM = new THRM_DEPT_LJMDataTable();
            base.Tables.Add(this.tableTHRM_DEPT_LJM);
            this.tableTIEAS_CD_LJM = new TIEAS_CD_LJMDataTable();
            base.Tables.Add(this.tableTIEAS_CD_LJM);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTHRM_BAS_LJM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTHRM_DEPT_LJM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTIEAS_CD_LJM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet2 ds = new DataSet2();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void THRM_BAS_LJMRowChangeEventHandler(object sender, THRM_BAS_LJMRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void THRM_DEPT_LJMRowChangeEventHandler(object sender, THRM_DEPT_LJMRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TIEAS_CD_LJMRowChangeEventHandler(object sender, TIEAS_CD_LJMRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class THRM_BAS_LJMDataTable : global::System.Data.TypedTableBase<THRM_BAS_LJMRow> {
            
            private global::System.Data.DataColumn columnBAS_EMPNO;
            
            private global::System.Data.DataColumn columnBAS_RESNO;
            
            private global::System.Data.DataColumn columnBAS_NAME;
            
            private global::System.Data.DataColumn columnBAS_CNAME;
            
            private global::System.Data.DataColumn columnBAS_ENAME;
            
            private global::System.Data.DataColumn columnBAS_FIX;
            
            private global::System.Data.DataColumn columnBAS_ZIP;
            
            private global::System.Data.DataColumn columnBAS_ADDR;
            
            private global::System.Data.DataColumn columnBAS_RESIDENCE;
            
            private global::System.Data.DataColumn columnBAS_HDPNO;
            
            private global::System.Data.DataColumn columnBAS_TELNO;
            
            private global::System.Data.DataColumn columnBAS_EMAIL;
            
            private global::System.Data.DataColumn columnBAS_MIL_STA;
            
            private global::System.Data.DataColumn columnBAS_MIL_MIL;
            
            private global::System.Data.DataColumn columnBAS_MIL_RNK;
            
            private global::System.Data.DataColumn columnBAS_MAR;
            
            private global::System.Data.DataColumn columnBAS_ACC_BANK1;
            
            private global::System.Data.DataColumn columnBAS_ACC_NAME1;
            
            private global::System.Data.DataColumn columnBAS_ACC_NO1;
            
            private global::System.Data.DataColumn columnBAS_ACC_BANK2;
            
            private global::System.Data.DataColumn columnBAS_ACC_NAME2;
            
            private global::System.Data.DataColumn columnBAS_ACC_NO2;
            
            private global::System.Data.DataColumn columnBAS_CONT;
            
            private global::System.Data.DataColumn columnBAS_INTERN;
            
            private global::System.Data.DataColumn columnBAS_INTERN_NO;
            
            private global::System.Data.DataColumn columnBAS_EMP_SDATE;
            
            private global::System.Data.DataColumn columnBAS_EMP_EDATE;
            
            private global::System.Data.DataColumn columnBAS_ENTDATE;
            
            private global::System.Data.DataColumn columnBAS_RESDATE;
            
            private global::System.Data.DataColumn columnBAS_LEVDATE;
            
            private global::System.Data.DataColumn columnBAS_REIDATE;
            
            private global::System.Data.DataColumn columnBAS_WSTA;
            
            private global::System.Data.DataColumn columnBAS_STS;
            
            private global::System.Data.DataColumn columnBAS_POS;
            
            private global::System.Data.DataColumn columnBAS_DUT;
            
            private global::System.Data.DataColumn columnBAS_DEPT;
            
            private global::System.Data.DataColumn columnBAS_RMK;
            
            private global::System.Data.DataColumn columnBAS_POS_DT;
            
            private global::System.Data.DataColumn columnBAS_DUT_DT;
            
            private global::System.Data.DataColumn columnBAS_DEPT_DT;
            
            private global::System.Data.DataColumn columnBAS_INTERN_DT;
            
            private global::System.Data.DataColumn columnDATASYS1;
            
            private global::System.Data.DataColumn columnDATASYS2;
            
            private global::System.Data.DataColumn columnDATASYS3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public THRM_BAS_LJMDataTable() {
                this.TableName = "THRM_BAS_LJM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal THRM_BAS_LJMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected THRM_BAS_LJMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_EMPNOColumn {
                get {
                    return this.columnBAS_EMPNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_RESNOColumn {
                get {
                    return this.columnBAS_RESNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_NAMEColumn {
                get {
                    return this.columnBAS_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_CNAMEColumn {
                get {
                    return this.columnBAS_CNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_ENAMEColumn {
                get {
                    return this.columnBAS_ENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_FIXColumn {
                get {
                    return this.columnBAS_FIX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_ZIPColumn {
                get {
                    return this.columnBAS_ZIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_ADDRColumn {
                get {
                    return this.columnBAS_ADDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_RESIDENCEColumn {
                get {
                    return this.columnBAS_RESIDENCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_HDPNOColumn {
                get {
                    return this.columnBAS_HDPNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_TELNOColumn {
                get {
                    return this.columnBAS_TELNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_EMAILColumn {
                get {
                    return this.columnBAS_EMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_MIL_STAColumn {
                get {
                    return this.columnBAS_MIL_STA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_MIL_MILColumn {
                get {
                    return this.columnBAS_MIL_MIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_MIL_RNKColumn {
                get {
                    return this.columnBAS_MIL_RNK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_MARColumn {
                get {
                    return this.columnBAS_MAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_ACC_BANK1Column {
                get {
                    return this.columnBAS_ACC_BANK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_ACC_NAME1Column {
                get {
                    return this.columnBAS_ACC_NAME1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_ACC_NO1Column {
                get {
                    return this.columnBAS_ACC_NO1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_ACC_BANK2Column {
                get {
                    return this.columnBAS_ACC_BANK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_ACC_NAME2Column {
                get {
                    return this.columnBAS_ACC_NAME2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_ACC_NO2Column {
                get {
                    return this.columnBAS_ACC_NO2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_CONTColumn {
                get {
                    return this.columnBAS_CONT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_INTERNColumn {
                get {
                    return this.columnBAS_INTERN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_INTERN_NOColumn {
                get {
                    return this.columnBAS_INTERN_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_EMP_SDATEColumn {
                get {
                    return this.columnBAS_EMP_SDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_EMP_EDATEColumn {
                get {
                    return this.columnBAS_EMP_EDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_ENTDATEColumn {
                get {
                    return this.columnBAS_ENTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_RESDATEColumn {
                get {
                    return this.columnBAS_RESDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_LEVDATEColumn {
                get {
                    return this.columnBAS_LEVDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_REIDATEColumn {
                get {
                    return this.columnBAS_REIDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_WSTAColumn {
                get {
                    return this.columnBAS_WSTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_STSColumn {
                get {
                    return this.columnBAS_STS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_POSColumn {
                get {
                    return this.columnBAS_POS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_DUTColumn {
                get {
                    return this.columnBAS_DUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_DEPTColumn {
                get {
                    return this.columnBAS_DEPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_RMKColumn {
                get {
                    return this.columnBAS_RMK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_POS_DTColumn {
                get {
                    return this.columnBAS_POS_DT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_DUT_DTColumn {
                get {
                    return this.columnBAS_DUT_DT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_DEPT_DTColumn {
                get {
                    return this.columnBAS_DEPT_DT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BAS_INTERN_DTColumn {
                get {
                    return this.columnBAS_INTERN_DT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATASYS1Column {
                get {
                    return this.columnDATASYS1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATASYS2Column {
                get {
                    return this.columnDATASYS2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATASYS3Column {
                get {
                    return this.columnDATASYS3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public THRM_BAS_LJMRow this[int index] {
                get {
                    return ((THRM_BAS_LJMRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event THRM_BAS_LJMRowChangeEventHandler THRM_BAS_LJMRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event THRM_BAS_LJMRowChangeEventHandler THRM_BAS_LJMRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event THRM_BAS_LJMRowChangeEventHandler THRM_BAS_LJMRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event THRM_BAS_LJMRowChangeEventHandler THRM_BAS_LJMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTHRM_BAS_LJMRow(THRM_BAS_LJMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public THRM_BAS_LJMRow AddTHRM_BAS_LJMRow(
                        string BAS_EMPNO, 
                        string BAS_RESNO, 
                        string BAS_NAME, 
                        string BAS_CNAME, 
                        string BAS_ENAME, 
                        string BAS_FIX, 
                        string BAS_ZIP, 
                        string BAS_ADDR, 
                        string BAS_RESIDENCE, 
                        string BAS_HDPNO, 
                        string BAS_TELNO, 
                        string BAS_EMAIL, 
                        string BAS_MIL_STA, 
                        string BAS_MIL_MIL, 
                        string BAS_MIL_RNK, 
                        string BAS_MAR, 
                        string BAS_ACC_BANK1, 
                        string BAS_ACC_NAME1, 
                        string BAS_ACC_NO1, 
                        string BAS_ACC_BANK2, 
                        string BAS_ACC_NAME2, 
                        string BAS_ACC_NO2, 
                        string BAS_CONT, 
                        string BAS_INTERN, 
                        short BAS_INTERN_NO, 
                        string BAS_EMP_SDATE, 
                        string BAS_EMP_EDATE, 
                        string BAS_ENTDATE, 
                        string BAS_RESDATE, 
                        string BAS_LEVDATE, 
                        string BAS_REIDATE, 
                        string BAS_WSTA, 
                        string BAS_STS, 
                        string BAS_POS, 
                        string BAS_DUT, 
                        string BAS_DEPT, 
                        string BAS_RMK, 
                        string BAS_POS_DT, 
                        string BAS_DUT_DT, 
                        string BAS_DEPT_DT, 
                        string BAS_INTERN_DT, 
                        System.DateTime DATASYS1, 
                        string DATASYS2, 
                        string DATASYS3) {
                THRM_BAS_LJMRow rowTHRM_BAS_LJMRow = ((THRM_BAS_LJMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BAS_EMPNO,
                        BAS_RESNO,
                        BAS_NAME,
                        BAS_CNAME,
                        BAS_ENAME,
                        BAS_FIX,
                        BAS_ZIP,
                        BAS_ADDR,
                        BAS_RESIDENCE,
                        BAS_HDPNO,
                        BAS_TELNO,
                        BAS_EMAIL,
                        BAS_MIL_STA,
                        BAS_MIL_MIL,
                        BAS_MIL_RNK,
                        BAS_MAR,
                        BAS_ACC_BANK1,
                        BAS_ACC_NAME1,
                        BAS_ACC_NO1,
                        BAS_ACC_BANK2,
                        BAS_ACC_NAME2,
                        BAS_ACC_NO2,
                        BAS_CONT,
                        BAS_INTERN,
                        BAS_INTERN_NO,
                        BAS_EMP_SDATE,
                        BAS_EMP_EDATE,
                        BAS_ENTDATE,
                        BAS_RESDATE,
                        BAS_LEVDATE,
                        BAS_REIDATE,
                        BAS_WSTA,
                        BAS_STS,
                        BAS_POS,
                        BAS_DUT,
                        BAS_DEPT,
                        BAS_RMK,
                        BAS_POS_DT,
                        BAS_DUT_DT,
                        BAS_DEPT_DT,
                        BAS_INTERN_DT,
                        DATASYS1,
                        DATASYS2,
                        DATASYS3};
                rowTHRM_BAS_LJMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTHRM_BAS_LJMRow);
                return rowTHRM_BAS_LJMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public THRM_BAS_LJMRow FindByBAS_EMPNO(string BAS_EMPNO) {
                return ((THRM_BAS_LJMRow)(this.Rows.Find(new object[] {
                            BAS_EMPNO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                THRM_BAS_LJMDataTable cln = ((THRM_BAS_LJMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new THRM_BAS_LJMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnBAS_EMPNO = base.Columns["BAS_EMPNO"];
                this.columnBAS_RESNO = base.Columns["BAS_RESNO"];
                this.columnBAS_NAME = base.Columns["BAS_NAME"];
                this.columnBAS_CNAME = base.Columns["BAS_CNAME"];
                this.columnBAS_ENAME = base.Columns["BAS_ENAME"];
                this.columnBAS_FIX = base.Columns["BAS_FIX"];
                this.columnBAS_ZIP = base.Columns["BAS_ZIP"];
                this.columnBAS_ADDR = base.Columns["BAS_ADDR"];
                this.columnBAS_RESIDENCE = base.Columns["BAS_RESIDENCE"];
                this.columnBAS_HDPNO = base.Columns["BAS_HDPNO"];
                this.columnBAS_TELNO = base.Columns["BAS_TELNO"];
                this.columnBAS_EMAIL = base.Columns["BAS_EMAIL"];
                this.columnBAS_MIL_STA = base.Columns["BAS_MIL_STA"];
                this.columnBAS_MIL_MIL = base.Columns["BAS_MIL_MIL"];
                this.columnBAS_MIL_RNK = base.Columns["BAS_MIL_RNK"];
                this.columnBAS_MAR = base.Columns["BAS_MAR"];
                this.columnBAS_ACC_BANK1 = base.Columns["BAS_ACC_BANK1"];
                this.columnBAS_ACC_NAME1 = base.Columns["BAS_ACC_NAME1"];
                this.columnBAS_ACC_NO1 = base.Columns["BAS_ACC_NO1"];
                this.columnBAS_ACC_BANK2 = base.Columns["BAS_ACC_BANK2"];
                this.columnBAS_ACC_NAME2 = base.Columns["BAS_ACC_NAME2"];
                this.columnBAS_ACC_NO2 = base.Columns["BAS_ACC_NO2"];
                this.columnBAS_CONT = base.Columns["BAS_CONT"];
                this.columnBAS_INTERN = base.Columns["BAS_INTERN"];
                this.columnBAS_INTERN_NO = base.Columns["BAS_INTERN_NO"];
                this.columnBAS_EMP_SDATE = base.Columns["BAS_EMP_SDATE"];
                this.columnBAS_EMP_EDATE = base.Columns["BAS_EMP_EDATE"];
                this.columnBAS_ENTDATE = base.Columns["BAS_ENTDATE"];
                this.columnBAS_RESDATE = base.Columns["BAS_RESDATE"];
                this.columnBAS_LEVDATE = base.Columns["BAS_LEVDATE"];
                this.columnBAS_REIDATE = base.Columns["BAS_REIDATE"];
                this.columnBAS_WSTA = base.Columns["BAS_WSTA"];
                this.columnBAS_STS = base.Columns["BAS_STS"];
                this.columnBAS_POS = base.Columns["BAS_POS"];
                this.columnBAS_DUT = base.Columns["BAS_DUT"];
                this.columnBAS_DEPT = base.Columns["BAS_DEPT"];
                this.columnBAS_RMK = base.Columns["BAS_RMK"];
                this.columnBAS_POS_DT = base.Columns["BAS_POS_DT"];
                this.columnBAS_DUT_DT = base.Columns["BAS_DUT_DT"];
                this.columnBAS_DEPT_DT = base.Columns["BAS_DEPT_DT"];
                this.columnBAS_INTERN_DT = base.Columns["BAS_INTERN_DT"];
                this.columnDATASYS1 = base.Columns["DATASYS1"];
                this.columnDATASYS2 = base.Columns["DATASYS2"];
                this.columnDATASYS3 = base.Columns["DATASYS3"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnBAS_EMPNO = new global::System.Data.DataColumn("BAS_EMPNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_EMPNO);
                this.columnBAS_RESNO = new global::System.Data.DataColumn("BAS_RESNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_RESNO);
                this.columnBAS_NAME = new global::System.Data.DataColumn("BAS_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_NAME);
                this.columnBAS_CNAME = new global::System.Data.DataColumn("BAS_CNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_CNAME);
                this.columnBAS_ENAME = new global::System.Data.DataColumn("BAS_ENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_ENAME);
                this.columnBAS_FIX = new global::System.Data.DataColumn("BAS_FIX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_FIX);
                this.columnBAS_ZIP = new global::System.Data.DataColumn("BAS_ZIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_ZIP);
                this.columnBAS_ADDR = new global::System.Data.DataColumn("BAS_ADDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_ADDR);
                this.columnBAS_RESIDENCE = new global::System.Data.DataColumn("BAS_RESIDENCE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_RESIDENCE);
                this.columnBAS_HDPNO = new global::System.Data.DataColumn("BAS_HDPNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_HDPNO);
                this.columnBAS_TELNO = new global::System.Data.DataColumn("BAS_TELNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_TELNO);
                this.columnBAS_EMAIL = new global::System.Data.DataColumn("BAS_EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_EMAIL);
                this.columnBAS_MIL_STA = new global::System.Data.DataColumn("BAS_MIL_STA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_MIL_STA);
                this.columnBAS_MIL_MIL = new global::System.Data.DataColumn("BAS_MIL_MIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_MIL_MIL);
                this.columnBAS_MIL_RNK = new global::System.Data.DataColumn("BAS_MIL_RNK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_MIL_RNK);
                this.columnBAS_MAR = new global::System.Data.DataColumn("BAS_MAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_MAR);
                this.columnBAS_ACC_BANK1 = new global::System.Data.DataColumn("BAS_ACC_BANK1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_ACC_BANK1);
                this.columnBAS_ACC_NAME1 = new global::System.Data.DataColumn("BAS_ACC_NAME1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_ACC_NAME1);
                this.columnBAS_ACC_NO1 = new global::System.Data.DataColumn("BAS_ACC_NO1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_ACC_NO1);
                this.columnBAS_ACC_BANK2 = new global::System.Data.DataColumn("BAS_ACC_BANK2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_ACC_BANK2);
                this.columnBAS_ACC_NAME2 = new global::System.Data.DataColumn("BAS_ACC_NAME2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_ACC_NAME2);
                this.columnBAS_ACC_NO2 = new global::System.Data.DataColumn("BAS_ACC_NO2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_ACC_NO2);
                this.columnBAS_CONT = new global::System.Data.DataColumn("BAS_CONT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_CONT);
                this.columnBAS_INTERN = new global::System.Data.DataColumn("BAS_INTERN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_INTERN);
                this.columnBAS_INTERN_NO = new global::System.Data.DataColumn("BAS_INTERN_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_INTERN_NO);
                this.columnBAS_EMP_SDATE = new global::System.Data.DataColumn("BAS_EMP_SDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_EMP_SDATE);
                this.columnBAS_EMP_EDATE = new global::System.Data.DataColumn("BAS_EMP_EDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_EMP_EDATE);
                this.columnBAS_ENTDATE = new global::System.Data.DataColumn("BAS_ENTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_ENTDATE);
                this.columnBAS_RESDATE = new global::System.Data.DataColumn("BAS_RESDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_RESDATE);
                this.columnBAS_LEVDATE = new global::System.Data.DataColumn("BAS_LEVDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_LEVDATE);
                this.columnBAS_REIDATE = new global::System.Data.DataColumn("BAS_REIDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_REIDATE);
                this.columnBAS_WSTA = new global::System.Data.DataColumn("BAS_WSTA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_WSTA);
                this.columnBAS_STS = new global::System.Data.DataColumn("BAS_STS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_STS);
                this.columnBAS_POS = new global::System.Data.DataColumn("BAS_POS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_POS);
                this.columnBAS_DUT = new global::System.Data.DataColumn("BAS_DUT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_DUT);
                this.columnBAS_DEPT = new global::System.Data.DataColumn("BAS_DEPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_DEPT);
                this.columnBAS_RMK = new global::System.Data.DataColumn("BAS_RMK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_RMK);
                this.columnBAS_POS_DT = new global::System.Data.DataColumn("BAS_POS_DT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_POS_DT);
                this.columnBAS_DUT_DT = new global::System.Data.DataColumn("BAS_DUT_DT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_DUT_DT);
                this.columnBAS_DEPT_DT = new global::System.Data.DataColumn("BAS_DEPT_DT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_DEPT_DT);
                this.columnBAS_INTERN_DT = new global::System.Data.DataColumn("BAS_INTERN_DT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAS_INTERN_DT);
                this.columnDATASYS1 = new global::System.Data.DataColumn("DATASYS1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATASYS1);
                this.columnDATASYS2 = new global::System.Data.DataColumn("DATASYS2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATASYS2);
                this.columnDATASYS3 = new global::System.Data.DataColumn("DATASYS3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATASYS3);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBAS_EMPNO}, true));
                this.columnBAS_EMPNO.AllowDBNull = false;
                this.columnBAS_EMPNO.Unique = true;
                this.columnBAS_EMPNO.MaxLength = 5;
                this.columnBAS_RESNO.MaxLength = 82;
                this.columnBAS_NAME.MaxLength = 20;
                this.columnBAS_CNAME.MaxLength = 20;
                this.columnBAS_ENAME.MaxLength = 50;
                this.columnBAS_FIX.MaxLength = 2;
                this.columnBAS_ZIP.MaxLength = 5;
                this.columnBAS_ADDR.MaxLength = 150;
                this.columnBAS_RESIDENCE.MaxLength = 20;
                this.columnBAS_HDPNO.MaxLength = 15;
                this.columnBAS_TELNO.MaxLength = 15;
                this.columnBAS_EMAIL.MaxLength = 30;
                this.columnBAS_MIL_STA.MaxLength = 4;
                this.columnBAS_MIL_MIL.MaxLength = 10;
                this.columnBAS_MIL_RNK.MaxLength = 6;
                this.columnBAS_MAR.MaxLength = 4;
                this.columnBAS_ACC_BANK1.MaxLength = 20;
                this.columnBAS_ACC_NAME1.MaxLength = 10;
                this.columnBAS_ACC_NO1.MaxLength = 20;
                this.columnBAS_ACC_BANK2.MaxLength = 20;
                this.columnBAS_ACC_NAME2.MaxLength = 10;
                this.columnBAS_ACC_NO2.MaxLength = 20;
                this.columnBAS_CONT.MaxLength = 6;
                this.columnBAS_INTERN.MaxLength = 4;
                this.columnBAS_EMP_SDATE.MaxLength = 8;
                this.columnBAS_EMP_EDATE.MaxLength = 8;
                this.columnBAS_ENTDATE.MaxLength = 8;
                this.columnBAS_RESDATE.MaxLength = 8;
                this.columnBAS_LEVDATE.MaxLength = 8;
                this.columnBAS_REIDATE.MaxLength = 8;
                this.columnBAS_WSTA.MaxLength = 4;
                this.columnBAS_STS.MaxLength = 1;
                this.columnBAS_POS.MaxLength = 3;
                this.columnBAS_DUT.MaxLength = 2;
                this.columnBAS_DEPT.MaxLength = 3;
                this.columnBAS_RMK.MaxLength = 200;
                this.columnBAS_POS_DT.MaxLength = 8;
                this.columnBAS_DUT_DT.MaxLength = 8;
                this.columnBAS_DEPT_DT.MaxLength = 8;
                this.columnBAS_INTERN_DT.MaxLength = 8;
                this.columnDATASYS2.MaxLength = 1;
                this.columnDATASYS3.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public THRM_BAS_LJMRow NewTHRM_BAS_LJMRow() {
                return ((THRM_BAS_LJMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new THRM_BAS_LJMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(THRM_BAS_LJMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.THRM_BAS_LJMRowChanged != null)) {
                    this.THRM_BAS_LJMRowChanged(this, new THRM_BAS_LJMRowChangeEvent(((THRM_BAS_LJMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.THRM_BAS_LJMRowChanging != null)) {
                    this.THRM_BAS_LJMRowChanging(this, new THRM_BAS_LJMRowChangeEvent(((THRM_BAS_LJMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.THRM_BAS_LJMRowDeleted != null)) {
                    this.THRM_BAS_LJMRowDeleted(this, new THRM_BAS_LJMRowChangeEvent(((THRM_BAS_LJMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.THRM_BAS_LJMRowDeleting != null)) {
                    this.THRM_BAS_LJMRowDeleting(this, new THRM_BAS_LJMRowChangeEvent(((THRM_BAS_LJMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTHRM_BAS_LJMRow(THRM_BAS_LJMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "THRM_BAS_LJMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class THRM_DEPT_LJMDataTable : global::System.Data.TypedTableBase<THRM_DEPT_LJMRow> {
            
            private global::System.Data.DataColumn columnDEPT_CODE;
            
            private global::System.Data.DataColumn columnDEPT_NAME;
            
            private global::System.Data.DataColumn columnDEPT_NAMES;
            
            private global::System.Data.DataColumn columnDEPT_SEQ;
            
            private global::System.Data.DataColumn columnDEPT_UPP;
            
            private global::System.Data.DataColumn columnDEPT_DEPT;
            
            private global::System.Data.DataColumn columnDEPT_SDATE;
            
            private global::System.Data.DataColumn columnDEPT_EDATE;
            
            private global::System.Data.DataColumn columnDATASYS1;
            
            private global::System.Data.DataColumn columnDATASYS2;
            
            private global::System.Data.DataColumn columnDATASYS3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public THRM_DEPT_LJMDataTable() {
                this.TableName = "THRM_DEPT_LJM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal THRM_DEPT_LJMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected THRM_DEPT_LJMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPT_CODEColumn {
                get {
                    return this.columnDEPT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPT_NAMEColumn {
                get {
                    return this.columnDEPT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPT_NAMESColumn {
                get {
                    return this.columnDEPT_NAMES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPT_SEQColumn {
                get {
                    return this.columnDEPT_SEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPT_UPPColumn {
                get {
                    return this.columnDEPT_UPP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPT_DEPTColumn {
                get {
                    return this.columnDEPT_DEPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPT_SDATEColumn {
                get {
                    return this.columnDEPT_SDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPT_EDATEColumn {
                get {
                    return this.columnDEPT_EDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATASYS1Column {
                get {
                    return this.columnDATASYS1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATASYS2Column {
                get {
                    return this.columnDATASYS2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATASYS3Column {
                get {
                    return this.columnDATASYS3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public THRM_DEPT_LJMRow this[int index] {
                get {
                    return ((THRM_DEPT_LJMRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event THRM_DEPT_LJMRowChangeEventHandler THRM_DEPT_LJMRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event THRM_DEPT_LJMRowChangeEventHandler THRM_DEPT_LJMRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event THRM_DEPT_LJMRowChangeEventHandler THRM_DEPT_LJMRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event THRM_DEPT_LJMRowChangeEventHandler THRM_DEPT_LJMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTHRM_DEPT_LJMRow(THRM_DEPT_LJMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public THRM_DEPT_LJMRow AddTHRM_DEPT_LJMRow(string DEPT_CODE, string DEPT_NAME, string DEPT_NAMES, string DEPT_SEQ, string DEPT_UPP, string DEPT_DEPT, string DEPT_SDATE, string DEPT_EDATE, System.DateTime DATASYS1, string DATASYS2, string DATASYS3) {
                THRM_DEPT_LJMRow rowTHRM_DEPT_LJMRow = ((THRM_DEPT_LJMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DEPT_CODE,
                        DEPT_NAME,
                        DEPT_NAMES,
                        DEPT_SEQ,
                        DEPT_UPP,
                        DEPT_DEPT,
                        DEPT_SDATE,
                        DEPT_EDATE,
                        DATASYS1,
                        DATASYS2,
                        DATASYS3};
                rowTHRM_DEPT_LJMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTHRM_DEPT_LJMRow);
                return rowTHRM_DEPT_LJMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public THRM_DEPT_LJMRow FindByDEPT_CODE(string DEPT_CODE) {
                return ((THRM_DEPT_LJMRow)(this.Rows.Find(new object[] {
                            DEPT_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                THRM_DEPT_LJMDataTable cln = ((THRM_DEPT_LJMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new THRM_DEPT_LJMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnDEPT_CODE = base.Columns["DEPT_CODE"];
                this.columnDEPT_NAME = base.Columns["DEPT_NAME"];
                this.columnDEPT_NAMES = base.Columns["DEPT_NAMES"];
                this.columnDEPT_SEQ = base.Columns["DEPT_SEQ"];
                this.columnDEPT_UPP = base.Columns["DEPT_UPP"];
                this.columnDEPT_DEPT = base.Columns["DEPT_DEPT"];
                this.columnDEPT_SDATE = base.Columns["DEPT_SDATE"];
                this.columnDEPT_EDATE = base.Columns["DEPT_EDATE"];
                this.columnDATASYS1 = base.Columns["DATASYS1"];
                this.columnDATASYS2 = base.Columns["DATASYS2"];
                this.columnDATASYS3 = base.Columns["DATASYS3"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnDEPT_CODE = new global::System.Data.DataColumn("DEPT_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_CODE);
                this.columnDEPT_NAME = new global::System.Data.DataColumn("DEPT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_NAME);
                this.columnDEPT_NAMES = new global::System.Data.DataColumn("DEPT_NAMES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_NAMES);
                this.columnDEPT_SEQ = new global::System.Data.DataColumn("DEPT_SEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_SEQ);
                this.columnDEPT_UPP = new global::System.Data.DataColumn("DEPT_UPP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_UPP);
                this.columnDEPT_DEPT = new global::System.Data.DataColumn("DEPT_DEPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_DEPT);
                this.columnDEPT_SDATE = new global::System.Data.DataColumn("DEPT_SDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_SDATE);
                this.columnDEPT_EDATE = new global::System.Data.DataColumn("DEPT_EDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_EDATE);
                this.columnDATASYS1 = new global::System.Data.DataColumn("DATASYS1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATASYS1);
                this.columnDATASYS2 = new global::System.Data.DataColumn("DATASYS2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATASYS2);
                this.columnDATASYS3 = new global::System.Data.DataColumn("DATASYS3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATASYS3);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDEPT_CODE}, true));
                this.columnDEPT_CODE.AllowDBNull = false;
                this.columnDEPT_CODE.Unique = true;
                this.columnDEPT_CODE.MaxLength = 3;
                this.columnDEPT_NAME.MaxLength = 50;
                this.columnDEPT_NAMES.MaxLength = 50;
                this.columnDEPT_SEQ.MaxLength = 4;
                this.columnDEPT_UPP.MaxLength = 3;
                this.columnDEPT_DEPT.MaxLength = 3;
                this.columnDEPT_SDATE.MaxLength = 8;
                this.columnDEPT_EDATE.MaxLength = 8;
                this.columnDATASYS2.MaxLength = 1;
                this.columnDATASYS3.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public THRM_DEPT_LJMRow NewTHRM_DEPT_LJMRow() {
                return ((THRM_DEPT_LJMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new THRM_DEPT_LJMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(THRM_DEPT_LJMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.THRM_DEPT_LJMRowChanged != null)) {
                    this.THRM_DEPT_LJMRowChanged(this, new THRM_DEPT_LJMRowChangeEvent(((THRM_DEPT_LJMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.THRM_DEPT_LJMRowChanging != null)) {
                    this.THRM_DEPT_LJMRowChanging(this, new THRM_DEPT_LJMRowChangeEvent(((THRM_DEPT_LJMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.THRM_DEPT_LJMRowDeleted != null)) {
                    this.THRM_DEPT_LJMRowDeleted(this, new THRM_DEPT_LJMRowChangeEvent(((THRM_DEPT_LJMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.THRM_DEPT_LJMRowDeleting != null)) {
                    this.THRM_DEPT_LJMRowDeleting(this, new THRM_DEPT_LJMRowChangeEvent(((THRM_DEPT_LJMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTHRM_DEPT_LJMRow(THRM_DEPT_LJMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "THRM_DEPT_LJMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TIEAS_CD_LJMDataTable : global::System.Data.TypedTableBase<TIEAS_CD_LJMRow> {
            
            private global::System.Data.DataColumn columnCD_GRPCD;
            
            private global::System.Data.DataColumn columnCD_CODE;
            
            private global::System.Data.DataColumn columnCD_SEQ;
            
            private global::System.Data.DataColumn columnCD_CODNMS;
            
            private global::System.Data.DataColumn columnCD_CODNM;
            
            private global::System.Data.DataColumn columnCD_ADDINFO;
            
            private global::System.Data.DataColumn columnCD_UPPER;
            
            private global::System.Data.DataColumn columnCD_USE;
            
            private global::System.Data.DataColumn columnCD_SDATE;
            
            private global::System.Data.DataColumn columnCD_EDATE;
            
            private global::System.Data.DataColumn columnDATASYS1;
            
            private global::System.Data.DataColumn columnDATASYS2;
            
            private global::System.Data.DataColumn columnDATASYS3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TIEAS_CD_LJMDataTable() {
                this.TableName = "TIEAS_CD_LJM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TIEAS_CD_LJMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TIEAS_CD_LJMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CD_GRPCDColumn {
                get {
                    return this.columnCD_GRPCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CD_CODEColumn {
                get {
                    return this.columnCD_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CD_SEQColumn {
                get {
                    return this.columnCD_SEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CD_CODNMSColumn {
                get {
                    return this.columnCD_CODNMS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CD_CODNMColumn {
                get {
                    return this.columnCD_CODNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CD_ADDINFOColumn {
                get {
                    return this.columnCD_ADDINFO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CD_UPPERColumn {
                get {
                    return this.columnCD_UPPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CD_USEColumn {
                get {
                    return this.columnCD_USE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CD_SDATEColumn {
                get {
                    return this.columnCD_SDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CD_EDATEColumn {
                get {
                    return this.columnCD_EDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATASYS1Column {
                get {
                    return this.columnDATASYS1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATASYS2Column {
                get {
                    return this.columnDATASYS2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATASYS3Column {
                get {
                    return this.columnDATASYS3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TIEAS_CD_LJMRow this[int index] {
                get {
                    return ((TIEAS_CD_LJMRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TIEAS_CD_LJMRowChangeEventHandler TIEAS_CD_LJMRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TIEAS_CD_LJMRowChangeEventHandler TIEAS_CD_LJMRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TIEAS_CD_LJMRowChangeEventHandler TIEAS_CD_LJMRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TIEAS_CD_LJMRowChangeEventHandler TIEAS_CD_LJMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTIEAS_CD_LJMRow(TIEAS_CD_LJMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TIEAS_CD_LJMRow AddTIEAS_CD_LJMRow(string CD_GRPCD, string CD_CODE, short CD_SEQ, string CD_CODNMS, string CD_CODNM, string CD_ADDINFO, string CD_UPPER, string CD_USE, string CD_SDATE, string CD_EDATE, System.DateTime DATASYS1, string DATASYS2, string DATASYS3) {
                TIEAS_CD_LJMRow rowTIEAS_CD_LJMRow = ((TIEAS_CD_LJMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CD_GRPCD,
                        CD_CODE,
                        CD_SEQ,
                        CD_CODNMS,
                        CD_CODNM,
                        CD_ADDINFO,
                        CD_UPPER,
                        CD_USE,
                        CD_SDATE,
                        CD_EDATE,
                        DATASYS1,
                        DATASYS2,
                        DATASYS3};
                rowTIEAS_CD_LJMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTIEAS_CD_LJMRow);
                return rowTIEAS_CD_LJMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TIEAS_CD_LJMRow FindByCD_GRPCDCD_CODE(string CD_GRPCD, string CD_CODE) {
                return ((TIEAS_CD_LJMRow)(this.Rows.Find(new object[] {
                            CD_GRPCD,
                            CD_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TIEAS_CD_LJMDataTable cln = ((TIEAS_CD_LJMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TIEAS_CD_LJMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnCD_GRPCD = base.Columns["CD_GRPCD"];
                this.columnCD_CODE = base.Columns["CD_CODE"];
                this.columnCD_SEQ = base.Columns["CD_SEQ"];
                this.columnCD_CODNMS = base.Columns["CD_CODNMS"];
                this.columnCD_CODNM = base.Columns["CD_CODNM"];
                this.columnCD_ADDINFO = base.Columns["CD_ADDINFO"];
                this.columnCD_UPPER = base.Columns["CD_UPPER"];
                this.columnCD_USE = base.Columns["CD_USE"];
                this.columnCD_SDATE = base.Columns["CD_SDATE"];
                this.columnCD_EDATE = base.Columns["CD_EDATE"];
                this.columnDATASYS1 = base.Columns["DATASYS1"];
                this.columnDATASYS2 = base.Columns["DATASYS2"];
                this.columnDATASYS3 = base.Columns["DATASYS3"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnCD_GRPCD = new global::System.Data.DataColumn("CD_GRPCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCD_GRPCD);
                this.columnCD_CODE = new global::System.Data.DataColumn("CD_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCD_CODE);
                this.columnCD_SEQ = new global::System.Data.DataColumn("CD_SEQ", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCD_SEQ);
                this.columnCD_CODNMS = new global::System.Data.DataColumn("CD_CODNMS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCD_CODNMS);
                this.columnCD_CODNM = new global::System.Data.DataColumn("CD_CODNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCD_CODNM);
                this.columnCD_ADDINFO = new global::System.Data.DataColumn("CD_ADDINFO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCD_ADDINFO);
                this.columnCD_UPPER = new global::System.Data.DataColumn("CD_UPPER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCD_UPPER);
                this.columnCD_USE = new global::System.Data.DataColumn("CD_USE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCD_USE);
                this.columnCD_SDATE = new global::System.Data.DataColumn("CD_SDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCD_SDATE);
                this.columnCD_EDATE = new global::System.Data.DataColumn("CD_EDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCD_EDATE);
                this.columnDATASYS1 = new global::System.Data.DataColumn("DATASYS1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATASYS1);
                this.columnDATASYS2 = new global::System.Data.DataColumn("DATASYS2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATASYS2);
                this.columnDATASYS3 = new global::System.Data.DataColumn("DATASYS3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATASYS3);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCD_GRPCD,
                                this.columnCD_CODE}, true));
                this.columnCD_GRPCD.AllowDBNull = false;
                this.columnCD_GRPCD.MaxLength = 3;
                this.columnCD_CODE.AllowDBNull = false;
                this.columnCD_CODE.MaxLength = 10;
                this.columnCD_CODNMS.MaxLength = 30;
                this.columnCD_CODNM.MaxLength = 50;
                this.columnCD_ADDINFO.MaxLength = 10;
                this.columnCD_UPPER.MaxLength = 10;
                this.columnCD_USE.MaxLength = 1;
                this.columnCD_SDATE.MaxLength = 8;
                this.columnCD_EDATE.MaxLength = 8;
                this.columnDATASYS2.MaxLength = 1;
                this.columnDATASYS3.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TIEAS_CD_LJMRow NewTIEAS_CD_LJMRow() {
                return ((TIEAS_CD_LJMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TIEAS_CD_LJMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TIEAS_CD_LJMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TIEAS_CD_LJMRowChanged != null)) {
                    this.TIEAS_CD_LJMRowChanged(this, new TIEAS_CD_LJMRowChangeEvent(((TIEAS_CD_LJMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TIEAS_CD_LJMRowChanging != null)) {
                    this.TIEAS_CD_LJMRowChanging(this, new TIEAS_CD_LJMRowChangeEvent(((TIEAS_CD_LJMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TIEAS_CD_LJMRowDeleted != null)) {
                    this.TIEAS_CD_LJMRowDeleted(this, new TIEAS_CD_LJMRowChangeEvent(((TIEAS_CD_LJMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TIEAS_CD_LJMRowDeleting != null)) {
                    this.TIEAS_CD_LJMRowDeleting(this, new TIEAS_CD_LJMRowChangeEvent(((TIEAS_CD_LJMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTIEAS_CD_LJMRow(TIEAS_CD_LJMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TIEAS_CD_LJMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class THRM_BAS_LJMRow : global::System.Data.DataRow {
            
            private THRM_BAS_LJMDataTable tableTHRM_BAS_LJM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal THRM_BAS_LJMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTHRM_BAS_LJM = ((THRM_BAS_LJMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_EMPNO {
                get {
                    return ((string)(this[this.tableTHRM_BAS_LJM.BAS_EMPNOColumn]));
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_EMPNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_RESNO {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_RESNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_RESNO\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_RESNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_NAME {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_CNAME {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_CNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_CNAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_CNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_ENAME {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_ENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_ENAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_ENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_FIX {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_FIXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_FIX\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_FIXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_ZIP {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_ZIPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_ZIP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_ZIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_ADDR {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_ADDRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_ADDR\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_ADDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_RESIDENCE {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_RESIDENCEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_RESIDENCE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_RESIDENCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_HDPNO {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_HDPNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_HDPNO\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_HDPNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_TELNO {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_TELNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_TELNO\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_TELNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_EMAIL {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_EMAIL\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_MIL_STA {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_MIL_STAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_MIL_STA\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_MIL_STAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_MIL_MIL {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_MIL_MILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_MIL_MIL\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_MIL_MILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_MIL_RNK {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_MIL_RNKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_MIL_RNK\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_MIL_RNKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_MAR {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_MARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_MAR\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_MARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_ACC_BANK1 {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_ACC_BANK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_ACC_BANK1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_ACC_BANK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_ACC_NAME1 {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_ACC_NAME1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_ACC_NAME1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_ACC_NAME1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_ACC_NO1 {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_ACC_NO1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_ACC_NO1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_ACC_NO1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_ACC_BANK2 {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_ACC_BANK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_ACC_BANK2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_ACC_BANK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_ACC_NAME2 {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_ACC_NAME2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_ACC_NAME2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_ACC_NAME2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_ACC_NO2 {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_ACC_NO2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_ACC_NO2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_ACC_NO2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_CONT {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_CONTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_CONT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_CONTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_INTERN {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_INTERNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_INTERN\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_INTERNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short BAS_INTERN_NO {
                get {
                    try {
                        return ((short)(this[this.tableTHRM_BAS_LJM.BAS_INTERN_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_INTERN_NO\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_INTERN_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_EMP_SDATE {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_EMP_SDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_EMP_SDATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_EMP_SDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_EMP_EDATE {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_EMP_EDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_EMP_EDATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_EMP_EDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_ENTDATE {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_ENTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_ENTDATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_ENTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_RESDATE {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_RESDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_RESDATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_RESDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_LEVDATE {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_LEVDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_LEVDATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_LEVDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_REIDATE {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_REIDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_REIDATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_REIDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_WSTA {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_WSTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_WSTA\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_WSTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_STS {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_STSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_STS\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_STSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_POS {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_POSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_POS\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_POSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_DUT {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_DUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_DUT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_DUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_DEPT {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_DEPTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_DEPT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_DEPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_RMK {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_RMKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_RMK\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_RMKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_POS_DT {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_POS_DTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_POS_DT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_POS_DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_DUT_DT {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_DUT_DTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_DUT_DT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_DUT_DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_DEPT_DT {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_DEPT_DTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_DEPT_DT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_DEPT_DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BAS_INTERN_DT {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.BAS_INTERN_DTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'BAS_INTERN_DT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.BAS_INTERN_DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATASYS1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTHRM_BAS_LJM.DATASYS1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'DATASYS1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.DATASYS1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DATASYS2 {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.DATASYS2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'DATASYS2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.DATASYS2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DATASYS3 {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_BAS_LJM.DATASYS3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_BAS_LJM\' 테이블의 \'DATASYS3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_BAS_LJM.DATASYS3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_RESNONull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_RESNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_RESNONull() {
                this[this.tableTHRM_BAS_LJM.BAS_RESNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_NAMENull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_NAMENull() {
                this[this.tableTHRM_BAS_LJM.BAS_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_CNAMENull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_CNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_CNAMENull() {
                this[this.tableTHRM_BAS_LJM.BAS_CNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_ENAMENull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_ENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_ENAMENull() {
                this[this.tableTHRM_BAS_LJM.BAS_ENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_FIXNull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_FIXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_FIXNull() {
                this[this.tableTHRM_BAS_LJM.BAS_FIXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_ZIPNull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_ZIPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_ZIPNull() {
                this[this.tableTHRM_BAS_LJM.BAS_ZIPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_ADDRNull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_ADDRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_ADDRNull() {
                this[this.tableTHRM_BAS_LJM.BAS_ADDRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_RESIDENCENull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_RESIDENCEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_RESIDENCENull() {
                this[this.tableTHRM_BAS_LJM.BAS_RESIDENCEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_HDPNONull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_HDPNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_HDPNONull() {
                this[this.tableTHRM_BAS_LJM.BAS_HDPNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_TELNONull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_TELNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_TELNONull() {
                this[this.tableTHRM_BAS_LJM.BAS_TELNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_EMAILNull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_EMAILNull() {
                this[this.tableTHRM_BAS_LJM.BAS_EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_MIL_STANull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_MIL_STAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_MIL_STANull() {
                this[this.tableTHRM_BAS_LJM.BAS_MIL_STAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_MIL_MILNull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_MIL_MILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_MIL_MILNull() {
                this[this.tableTHRM_BAS_LJM.BAS_MIL_MILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_MIL_RNKNull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_MIL_RNKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_MIL_RNKNull() {
                this[this.tableTHRM_BAS_LJM.BAS_MIL_RNKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_MARNull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_MARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_MARNull() {
                this[this.tableTHRM_BAS_LJM.BAS_MARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_ACC_BANK1Null() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_ACC_BANK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_ACC_BANK1Null() {
                this[this.tableTHRM_BAS_LJM.BAS_ACC_BANK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_ACC_NAME1Null() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_ACC_NAME1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_ACC_NAME1Null() {
                this[this.tableTHRM_BAS_LJM.BAS_ACC_NAME1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_ACC_NO1Null() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_ACC_NO1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_ACC_NO1Null() {
                this[this.tableTHRM_BAS_LJM.BAS_ACC_NO1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_ACC_BANK2Null() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_ACC_BANK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_ACC_BANK2Null() {
                this[this.tableTHRM_BAS_LJM.BAS_ACC_BANK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_ACC_NAME2Null() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_ACC_NAME2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_ACC_NAME2Null() {
                this[this.tableTHRM_BAS_LJM.BAS_ACC_NAME2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_ACC_NO2Null() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_ACC_NO2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_ACC_NO2Null() {
                this[this.tableTHRM_BAS_LJM.BAS_ACC_NO2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_CONTNull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_CONTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_CONTNull() {
                this[this.tableTHRM_BAS_LJM.BAS_CONTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_INTERNNull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_INTERNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_INTERNNull() {
                this[this.tableTHRM_BAS_LJM.BAS_INTERNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_INTERN_NONull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_INTERN_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_INTERN_NONull() {
                this[this.tableTHRM_BAS_LJM.BAS_INTERN_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_EMP_SDATENull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_EMP_SDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_EMP_SDATENull() {
                this[this.tableTHRM_BAS_LJM.BAS_EMP_SDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_EMP_EDATENull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_EMP_EDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_EMP_EDATENull() {
                this[this.tableTHRM_BAS_LJM.BAS_EMP_EDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_ENTDATENull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_ENTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_ENTDATENull() {
                this[this.tableTHRM_BAS_LJM.BAS_ENTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_RESDATENull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_RESDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_RESDATENull() {
                this[this.tableTHRM_BAS_LJM.BAS_RESDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_LEVDATENull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_LEVDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_LEVDATENull() {
                this[this.tableTHRM_BAS_LJM.BAS_LEVDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_REIDATENull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_REIDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_REIDATENull() {
                this[this.tableTHRM_BAS_LJM.BAS_REIDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_WSTANull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_WSTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_WSTANull() {
                this[this.tableTHRM_BAS_LJM.BAS_WSTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_STSNull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_STSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_STSNull() {
                this[this.tableTHRM_BAS_LJM.BAS_STSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_POSNull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_POSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_POSNull() {
                this[this.tableTHRM_BAS_LJM.BAS_POSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_DUTNull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_DUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_DUTNull() {
                this[this.tableTHRM_BAS_LJM.BAS_DUTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_DEPTNull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_DEPTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_DEPTNull() {
                this[this.tableTHRM_BAS_LJM.BAS_DEPTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_RMKNull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_RMKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_RMKNull() {
                this[this.tableTHRM_BAS_LJM.BAS_RMKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_POS_DTNull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_POS_DTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_POS_DTNull() {
                this[this.tableTHRM_BAS_LJM.BAS_POS_DTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_DUT_DTNull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_DUT_DTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_DUT_DTNull() {
                this[this.tableTHRM_BAS_LJM.BAS_DUT_DTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_DEPT_DTNull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_DEPT_DTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_DEPT_DTNull() {
                this[this.tableTHRM_BAS_LJM.BAS_DEPT_DTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBAS_INTERN_DTNull() {
                return this.IsNull(this.tableTHRM_BAS_LJM.BAS_INTERN_DTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBAS_INTERN_DTNull() {
                this[this.tableTHRM_BAS_LJM.BAS_INTERN_DTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATASYS1Null() {
                return this.IsNull(this.tableTHRM_BAS_LJM.DATASYS1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATASYS1Null() {
                this[this.tableTHRM_BAS_LJM.DATASYS1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATASYS2Null() {
                return this.IsNull(this.tableTHRM_BAS_LJM.DATASYS2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATASYS2Null() {
                this[this.tableTHRM_BAS_LJM.DATASYS2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATASYS3Null() {
                return this.IsNull(this.tableTHRM_BAS_LJM.DATASYS3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATASYS3Null() {
                this[this.tableTHRM_BAS_LJM.DATASYS3Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class THRM_DEPT_LJMRow : global::System.Data.DataRow {
            
            private THRM_DEPT_LJMDataTable tableTHRM_DEPT_LJM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal THRM_DEPT_LJMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTHRM_DEPT_LJM = ((THRM_DEPT_LJMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPT_CODE {
                get {
                    return ((string)(this[this.tableTHRM_DEPT_LJM.DEPT_CODEColumn]));
                }
                set {
                    this[this.tableTHRM_DEPT_LJM.DEPT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_DEPT_LJM.DEPT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_DEPT_LJM\' 테이블의 \'DEPT_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_DEPT_LJM.DEPT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPT_NAMES {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_DEPT_LJM.DEPT_NAMESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_DEPT_LJM\' 테이블의 \'DEPT_NAMES\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_DEPT_LJM.DEPT_NAMESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPT_SEQ {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_DEPT_LJM.DEPT_SEQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_DEPT_LJM\' 테이블의 \'DEPT_SEQ\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_DEPT_LJM.DEPT_SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPT_UPP {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_DEPT_LJM.DEPT_UPPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_DEPT_LJM\' 테이블의 \'DEPT_UPP\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_DEPT_LJM.DEPT_UPPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPT_DEPT {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_DEPT_LJM.DEPT_DEPTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_DEPT_LJM\' 테이블의 \'DEPT_DEPT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_DEPT_LJM.DEPT_DEPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPT_SDATE {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_DEPT_LJM.DEPT_SDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_DEPT_LJM\' 테이블의 \'DEPT_SDATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_DEPT_LJM.DEPT_SDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPT_EDATE {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_DEPT_LJM.DEPT_EDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_DEPT_LJM\' 테이블의 \'DEPT_EDATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_DEPT_LJM.DEPT_EDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATASYS1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTHRM_DEPT_LJM.DATASYS1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_DEPT_LJM\' 테이블의 \'DATASYS1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_DEPT_LJM.DATASYS1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DATASYS2 {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_DEPT_LJM.DATASYS2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_DEPT_LJM\' 테이블의 \'DATASYS2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_DEPT_LJM.DATASYS2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DATASYS3 {
                get {
                    try {
                        return ((string)(this[this.tableTHRM_DEPT_LJM.DATASYS3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'THRM_DEPT_LJM\' 테이블의 \'DATASYS3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTHRM_DEPT_LJM.DATASYS3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDEPT_NAMENull() {
                return this.IsNull(this.tableTHRM_DEPT_LJM.DEPT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDEPT_NAMENull() {
                this[this.tableTHRM_DEPT_LJM.DEPT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDEPT_NAMESNull() {
                return this.IsNull(this.tableTHRM_DEPT_LJM.DEPT_NAMESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDEPT_NAMESNull() {
                this[this.tableTHRM_DEPT_LJM.DEPT_NAMESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDEPT_SEQNull() {
                return this.IsNull(this.tableTHRM_DEPT_LJM.DEPT_SEQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDEPT_SEQNull() {
                this[this.tableTHRM_DEPT_LJM.DEPT_SEQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDEPT_UPPNull() {
                return this.IsNull(this.tableTHRM_DEPT_LJM.DEPT_UPPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDEPT_UPPNull() {
                this[this.tableTHRM_DEPT_LJM.DEPT_UPPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDEPT_DEPTNull() {
                return this.IsNull(this.tableTHRM_DEPT_LJM.DEPT_DEPTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDEPT_DEPTNull() {
                this[this.tableTHRM_DEPT_LJM.DEPT_DEPTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDEPT_SDATENull() {
                return this.IsNull(this.tableTHRM_DEPT_LJM.DEPT_SDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDEPT_SDATENull() {
                this[this.tableTHRM_DEPT_LJM.DEPT_SDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDEPT_EDATENull() {
                return this.IsNull(this.tableTHRM_DEPT_LJM.DEPT_EDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDEPT_EDATENull() {
                this[this.tableTHRM_DEPT_LJM.DEPT_EDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATASYS1Null() {
                return this.IsNull(this.tableTHRM_DEPT_LJM.DATASYS1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATASYS1Null() {
                this[this.tableTHRM_DEPT_LJM.DATASYS1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATASYS2Null() {
                return this.IsNull(this.tableTHRM_DEPT_LJM.DATASYS2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATASYS2Null() {
                this[this.tableTHRM_DEPT_LJM.DATASYS2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATASYS3Null() {
                return this.IsNull(this.tableTHRM_DEPT_LJM.DATASYS3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATASYS3Null() {
                this[this.tableTHRM_DEPT_LJM.DATASYS3Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TIEAS_CD_LJMRow : global::System.Data.DataRow {
            
            private TIEAS_CD_LJMDataTable tableTIEAS_CD_LJM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TIEAS_CD_LJMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTIEAS_CD_LJM = ((TIEAS_CD_LJMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CD_GRPCD {
                get {
                    return ((string)(this[this.tableTIEAS_CD_LJM.CD_GRPCDColumn]));
                }
                set {
                    this[this.tableTIEAS_CD_LJM.CD_GRPCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CD_CODE {
                get {
                    return ((string)(this[this.tableTIEAS_CD_LJM.CD_CODEColumn]));
                }
                set {
                    this[this.tableTIEAS_CD_LJM.CD_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short CD_SEQ {
                get {
                    try {
                        return ((short)(this[this.tableTIEAS_CD_LJM.CD_SEQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TIEAS_CD_LJM\' 테이블의 \'CD_SEQ\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTIEAS_CD_LJM.CD_SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CD_CODNMS {
                get {
                    try {
                        return ((string)(this[this.tableTIEAS_CD_LJM.CD_CODNMSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TIEAS_CD_LJM\' 테이블의 \'CD_CODNMS\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTIEAS_CD_LJM.CD_CODNMSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CD_CODNM {
                get {
                    try {
                        return ((string)(this[this.tableTIEAS_CD_LJM.CD_CODNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TIEAS_CD_LJM\' 테이블의 \'CD_CODNM\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTIEAS_CD_LJM.CD_CODNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CD_ADDINFO {
                get {
                    try {
                        return ((string)(this[this.tableTIEAS_CD_LJM.CD_ADDINFOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TIEAS_CD_LJM\' 테이블의 \'CD_ADDINFO\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTIEAS_CD_LJM.CD_ADDINFOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CD_UPPER {
                get {
                    try {
                        return ((string)(this[this.tableTIEAS_CD_LJM.CD_UPPERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TIEAS_CD_LJM\' 테이블의 \'CD_UPPER\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTIEAS_CD_LJM.CD_UPPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CD_USE {
                get {
                    try {
                        return ((string)(this[this.tableTIEAS_CD_LJM.CD_USEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TIEAS_CD_LJM\' 테이블의 \'CD_USE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTIEAS_CD_LJM.CD_USEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CD_SDATE {
                get {
                    try {
                        return ((string)(this[this.tableTIEAS_CD_LJM.CD_SDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TIEAS_CD_LJM\' 테이블의 \'CD_SDATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTIEAS_CD_LJM.CD_SDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CD_EDATE {
                get {
                    try {
                        return ((string)(this[this.tableTIEAS_CD_LJM.CD_EDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TIEAS_CD_LJM\' 테이블의 \'CD_EDATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTIEAS_CD_LJM.CD_EDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATASYS1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTIEAS_CD_LJM.DATASYS1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TIEAS_CD_LJM\' 테이블의 \'DATASYS1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTIEAS_CD_LJM.DATASYS1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DATASYS2 {
                get {
                    try {
                        return ((string)(this[this.tableTIEAS_CD_LJM.DATASYS2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TIEAS_CD_LJM\' 테이블의 \'DATASYS2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTIEAS_CD_LJM.DATASYS2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DATASYS3 {
                get {
                    try {
                        return ((string)(this[this.tableTIEAS_CD_LJM.DATASYS3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'TIEAS_CD_LJM\' 테이블의 \'DATASYS3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableTIEAS_CD_LJM.DATASYS3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCD_SEQNull() {
                return this.IsNull(this.tableTIEAS_CD_LJM.CD_SEQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCD_SEQNull() {
                this[this.tableTIEAS_CD_LJM.CD_SEQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCD_CODNMSNull() {
                return this.IsNull(this.tableTIEAS_CD_LJM.CD_CODNMSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCD_CODNMSNull() {
                this[this.tableTIEAS_CD_LJM.CD_CODNMSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCD_CODNMNull() {
                return this.IsNull(this.tableTIEAS_CD_LJM.CD_CODNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCD_CODNMNull() {
                this[this.tableTIEAS_CD_LJM.CD_CODNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCD_ADDINFONull() {
                return this.IsNull(this.tableTIEAS_CD_LJM.CD_ADDINFOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCD_ADDINFONull() {
                this[this.tableTIEAS_CD_LJM.CD_ADDINFOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCD_UPPERNull() {
                return this.IsNull(this.tableTIEAS_CD_LJM.CD_UPPERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCD_UPPERNull() {
                this[this.tableTIEAS_CD_LJM.CD_UPPERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCD_USENull() {
                return this.IsNull(this.tableTIEAS_CD_LJM.CD_USEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCD_USENull() {
                this[this.tableTIEAS_CD_LJM.CD_USEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCD_SDATENull() {
                return this.IsNull(this.tableTIEAS_CD_LJM.CD_SDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCD_SDATENull() {
                this[this.tableTIEAS_CD_LJM.CD_SDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCD_EDATENull() {
                return this.IsNull(this.tableTIEAS_CD_LJM.CD_EDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCD_EDATENull() {
                this[this.tableTIEAS_CD_LJM.CD_EDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATASYS1Null() {
                return this.IsNull(this.tableTIEAS_CD_LJM.DATASYS1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATASYS1Null() {
                this[this.tableTIEAS_CD_LJM.DATASYS1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATASYS2Null() {
                return this.IsNull(this.tableTIEAS_CD_LJM.DATASYS2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATASYS2Null() {
                this[this.tableTIEAS_CD_LJM.DATASYS2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATASYS3Null() {
                return this.IsNull(this.tableTIEAS_CD_LJM.DATASYS3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATASYS3Null() {
                this[this.tableTIEAS_CD_LJM.DATASYS3Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class THRM_BAS_LJMRowChangeEvent : global::System.EventArgs {
            
            private THRM_BAS_LJMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public THRM_BAS_LJMRowChangeEvent(THRM_BAS_LJMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public THRM_BAS_LJMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class THRM_DEPT_LJMRowChangeEvent : global::System.EventArgs {
            
            private THRM_DEPT_LJMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public THRM_DEPT_LJMRowChangeEvent(THRM_DEPT_LJMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public THRM_DEPT_LJMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TIEAS_CD_LJMRowChangeEvent : global::System.EventArgs {
            
            private TIEAS_CD_LJMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TIEAS_CD_LJMRowChangeEvent(TIEAS_CD_LJMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TIEAS_CD_LJMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Project1.DataSet2TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class THRM_BAS_LJMTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public THRM_BAS_LJMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "THRM_BAS_LJM";
            tableMapping.ColumnMappings.Add("BAS_EMPNO", "BAS_EMPNO");
            tableMapping.ColumnMappings.Add("BAS_RESNO", "BAS_RESNO");
            tableMapping.ColumnMappings.Add("BAS_NAME", "BAS_NAME");
            tableMapping.ColumnMappings.Add("BAS_CNAME", "BAS_CNAME");
            tableMapping.ColumnMappings.Add("BAS_ENAME", "BAS_ENAME");
            tableMapping.ColumnMappings.Add("BAS_FIX", "BAS_FIX");
            tableMapping.ColumnMappings.Add("BAS_ZIP", "BAS_ZIP");
            tableMapping.ColumnMappings.Add("BAS_ADDR", "BAS_ADDR");
            tableMapping.ColumnMappings.Add("BAS_RESIDENCE", "BAS_RESIDENCE");
            tableMapping.ColumnMappings.Add("BAS_HDPNO", "BAS_HDPNO");
            tableMapping.ColumnMappings.Add("BAS_TELNO", "BAS_TELNO");
            tableMapping.ColumnMappings.Add("BAS_EMAIL", "BAS_EMAIL");
            tableMapping.ColumnMappings.Add("BAS_MIL_STA", "BAS_MIL_STA");
            tableMapping.ColumnMappings.Add("BAS_MIL_MIL", "BAS_MIL_MIL");
            tableMapping.ColumnMappings.Add("BAS_MIL_RNK", "BAS_MIL_RNK");
            tableMapping.ColumnMappings.Add("BAS_MAR", "BAS_MAR");
            tableMapping.ColumnMappings.Add("BAS_ACC_BANK1", "BAS_ACC_BANK1");
            tableMapping.ColumnMappings.Add("BAS_ACC_NAME1", "BAS_ACC_NAME1");
            tableMapping.ColumnMappings.Add("BAS_ACC_NO1", "BAS_ACC_NO1");
            tableMapping.ColumnMappings.Add("BAS_ACC_BANK2", "BAS_ACC_BANK2");
            tableMapping.ColumnMappings.Add("BAS_ACC_NAME2", "BAS_ACC_NAME2");
            tableMapping.ColumnMappings.Add("BAS_ACC_NO2", "BAS_ACC_NO2");
            tableMapping.ColumnMappings.Add("BAS_CONT", "BAS_CONT");
            tableMapping.ColumnMappings.Add("BAS_INTERN", "BAS_INTERN");
            tableMapping.ColumnMappings.Add("BAS_INTERN_NO", "BAS_INTERN_NO");
            tableMapping.ColumnMappings.Add("BAS_EMP_SDATE", "BAS_EMP_SDATE");
            tableMapping.ColumnMappings.Add("BAS_EMP_EDATE", "BAS_EMP_EDATE");
            tableMapping.ColumnMappings.Add("BAS_ENTDATE", "BAS_ENTDATE");
            tableMapping.ColumnMappings.Add("BAS_RESDATE", "BAS_RESDATE");
            tableMapping.ColumnMappings.Add("BAS_LEVDATE", "BAS_LEVDATE");
            tableMapping.ColumnMappings.Add("BAS_REIDATE", "BAS_REIDATE");
            tableMapping.ColumnMappings.Add("BAS_WSTA", "BAS_WSTA");
            tableMapping.ColumnMappings.Add("BAS_STS", "BAS_STS");
            tableMapping.ColumnMappings.Add("BAS_POS", "BAS_POS");
            tableMapping.ColumnMappings.Add("BAS_DUT", "BAS_DUT");
            tableMapping.ColumnMappings.Add("BAS_DEPT", "BAS_DEPT");
            tableMapping.ColumnMappings.Add("BAS_RMK", "BAS_RMK");
            tableMapping.ColumnMappings.Add("BAS_POS_DT", "BAS_POS_DT");
            tableMapping.ColumnMappings.Add("BAS_DUT_DT", "BAS_DUT_DT");
            tableMapping.ColumnMappings.Add("BAS_DEPT_DT", "BAS_DEPT_DT");
            tableMapping.ColumnMappings.Add("BAS_INTERN_DT", "BAS_INTERN_DT");
            tableMapping.ColumnMappings.Add("DATASYS1", "DATASYS1");
            tableMapping.ColumnMappings.Add("DATASYS2", "DATASYS2");
            tableMapping.ColumnMappings.Add("DATASYS3", "DATASYS3");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"EDU\".\"THRM_BAS_LJM\" WHERE ((\"BAS_EMPNO\" = :Original_BAS_EMPNO) AND (" +
                "(:IsNull_BAS_RESNO = 1 AND \"BAS_RESNO\" IS NULL) OR (\"BAS_RESNO\" = :Original_BAS_" +
                "RESNO)) AND ((:IsNull_BAS_NAME = 1 AND \"BAS_NAME\" IS NULL) OR (\"BAS_NAME\" = :Ori" +
                "ginal_BAS_NAME)) AND ((:IsNull_BAS_CNAME = 1 AND \"BAS_CNAME\" IS NULL) OR (\"BAS_C" +
                "NAME\" = :Original_BAS_CNAME)) AND ((:IsNull_BAS_ENAME = 1 AND \"BAS_ENAME\" IS NUL" +
                "L) OR (\"BAS_ENAME\" = :Original_BAS_ENAME)) AND ((:IsNull_BAS_FIX = 1 AND \"BAS_FI" +
                "X\" IS NULL) OR (\"BAS_FIX\" = :Original_BAS_FIX)) AND ((:IsNull_BAS_ZIP = 1 AND \"B" +
                "AS_ZIP\" IS NULL) OR (\"BAS_ZIP\" = :Original_BAS_ZIP)) AND ((:IsNull_BAS_ADDR = 1 " +
                "AND \"BAS_ADDR\" IS NULL) OR (\"BAS_ADDR\" = :Original_BAS_ADDR)) AND ((:IsNull_BAS_" +
                "RESIDENCE = 1 AND \"BAS_RESIDENCE\" IS NULL) OR (\"BAS_RESIDENCE\" = :Original_BAS_R" +
                "ESIDENCE)) AND ((:IsNull_BAS_HDPNO = 1 AND \"BAS_HDPNO\" IS NULL) OR (\"BAS_HDPNO\" " +
                "= :Original_BAS_HDPNO)) AND ((:IsNull_BAS_TELNO = 1 AND \"BAS_TELNO\" IS NULL) OR " +
                "(\"BAS_TELNO\" = :Original_BAS_TELNO)) AND ((:IsNull_BAS_EMAIL = 1 AND \"BAS_EMAIL\"" +
                " IS NULL) OR (\"BAS_EMAIL\" = :Original_BAS_EMAIL)) AND ((:IsNull_BAS_MIL_STA = 1 " +
                "AND \"BAS_MIL_STA\" IS NULL) OR (\"BAS_MIL_STA\" = :Original_BAS_MIL_STA)) AND ((:Is" +
                "Null_BAS_MIL_MIL = 1 AND \"BAS_MIL_MIL\" IS NULL) OR (\"BAS_MIL_MIL\" = :Original_BA" +
                "S_MIL_MIL)) AND ((:IsNull_BAS_MIL_RNK = 1 AND \"BAS_MIL_RNK\" IS NULL) OR (\"BAS_MI" +
                "L_RNK\" = :Original_BAS_MIL_RNK)) AND ((:IsNull_BAS_MAR = 1 AND \"BAS_MAR\" IS NULL" +
                ") OR (\"BAS_MAR\" = :Original_BAS_MAR)) AND ((:IsNull_BAS_ACC_BANK1 = 1 AND \"BAS_A" +
                "CC_BANK1\" IS NULL) OR (\"BAS_ACC_BANK1\" = :Original_BAS_ACC_BANK1)) AND ((:IsNull" +
                "_BAS_ACC_NAME1 = 1 AND \"BAS_ACC_NAME1\" IS NULL) OR (\"BAS_ACC_NAME1\" = :Original_" +
                "BAS_ACC_NAME1)) AND ((:IsNull_BAS_ACC_NO1 = 1 AND \"BAS_ACC_NO1\" IS NULL) OR (\"BA" +
                "S_ACC_NO1\" = :Original_BAS_ACC_NO1)) AND ((:IsNull_BAS_ACC_BANK2 = 1 AND \"BAS_AC" +
                "C_BANK2\" IS NULL) OR (\"BAS_ACC_BANK2\" = :Original_BAS_ACC_BANK2)) AND ((:IsNull_" +
                "BAS_ACC_NAME2 = 1 AND \"BAS_ACC_NAME2\" IS NULL) OR (\"BAS_ACC_NAME2\" = :Original_B" +
                "AS_ACC_NAME2)) AND ((:IsNull_BAS_ACC_NO2 = 1 AND \"BAS_ACC_NO2\" IS NULL) OR (\"BAS" +
                "_ACC_NO2\" = :Original_BAS_ACC_NO2)) AND ((:IsNull_BAS_CONT = 1 AND \"BAS_CONT\" IS" +
                " NULL) OR (\"BAS_CONT\" = :Original_BAS_CONT)) AND ((:IsNull_BAS_INTERN = 1 AND \"B" +
                "AS_INTERN\" IS NULL) OR (\"BAS_INTERN\" = :Original_BAS_INTERN)) AND ((:IsNull_BAS_" +
                "INTERN_NO = 1 AND \"BAS_INTERN_NO\" IS NULL) OR (\"BAS_INTERN_NO\" = :Original_BAS_I" +
                "NTERN_NO)) AND ((:IsNull_BAS_EMP_SDATE = 1 AND \"BAS_EMP_SDATE\" IS NULL) OR (\"BAS" +
                "_EMP_SDATE\" = :Original_BAS_EMP_SDATE)) AND ((:IsNull_BAS_EMP_EDATE = 1 AND \"BAS" +
                "_EMP_EDATE\" IS NULL) OR (\"BAS_EMP_EDATE\" = :Original_BAS_EMP_EDATE)) AND ((:IsNu" +
                "ll_BAS_ENTDATE = 1 AND \"BAS_ENTDATE\" IS NULL) OR (\"BAS_ENTDATE\" = :Original_BAS_" +
                "ENTDATE)) AND ((:IsNull_BAS_RESDATE = 1 AND \"BAS_RESDATE\" IS NULL) OR (\"BAS_RESD" +
                "ATE\" = :Original_BAS_RESDATE)) AND ((:IsNull_BAS_LEVDATE = 1 AND \"BAS_LEVDATE\" I" +
                "S NULL) OR (\"BAS_LEVDATE\" = :Original_BAS_LEVDATE)) AND ((:IsNull_BAS_REIDATE = " +
                "1 AND \"BAS_REIDATE\" IS NULL) OR (\"BAS_REIDATE\" = :Original_BAS_REIDATE)) AND ((:" +
                "IsNull_BAS_WSTA = 1 AND \"BAS_WSTA\" IS NULL) OR (\"BAS_WSTA\" = :Original_BAS_WSTA)" +
                ") AND ((:IsNull_BAS_STS = 1 AND \"BAS_STS\" IS NULL) OR (\"BAS_STS\" = :Original_BAS" +
                "_STS)) AND ((:IsNull_BAS_POS = 1 AND \"BAS_POS\" IS NULL) OR (\"BAS_POS\" = :Origina" +
                "l_BAS_POS)) AND ((:IsNull_BAS_DUT = 1 AND \"BAS_DUT\" IS NULL) OR (\"BAS_DUT\" = :Or" +
                "iginal_BAS_DUT)) AND ((:IsNull_BAS_DEPT = 1 AND \"BAS_DEPT\" IS NULL) OR (\"BAS_DEP" +
                "T\" = :Original_BAS_DEPT)) AND ((:IsNull_BAS_RMK = 1 AND \"BAS_RMK\" IS NULL) OR (\"" +
                "BAS_RMK\" = :Original_BAS_RMK)) AND ((:IsNull_BAS_POS_DT = 1 AND \"BAS_POS_DT\" IS " +
                "NULL) OR (\"BAS_POS_DT\" = :Original_BAS_POS_DT)) AND ((:IsNull_BAS_DUT_DT = 1 AND" +
                " \"BAS_DUT_DT\" IS NULL) OR (\"BAS_DUT_DT\" = :Original_BAS_DUT_DT)) AND ((:IsNull_B" +
                "AS_DEPT_DT = 1 AND \"BAS_DEPT_DT\" IS NULL) OR (\"BAS_DEPT_DT\" = :Original_BAS_DEPT" +
                "_DT)) AND ((:IsNull_BAS_INTERN_DT = 1 AND \"BAS_INTERN_DT\" IS NULL) OR (\"BAS_INTE" +
                "RN_DT\" = :Original_BAS_INTERN_DT)) AND ((:IsNull_DATASYS1 = 1 AND \"DATASYS1\" IS " +
                "NULL) OR (\"DATASYS1\" = :Original_DATASYS1)) AND ((:IsNull_DATASYS2 = 1 AND \"DATA" +
                "SYS2\" IS NULL) OR (\"DATASYS2\" = :Original_DATASYS2)) AND ((:IsNull_DATASYS3 = 1 " +
                "AND \"DATASYS3\" IS NULL) OR (\"DATASYS3\" = :Original_DATASYS3)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_EMPNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMPNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_RESNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 82;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RESNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_RESNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 82;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RESNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_NAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_CNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_CNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_CNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_CNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ENAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ENAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_FIX";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "BAS_FIX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_FIX";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "BAS_FIX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ZIP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ZIP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ZIP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ZIP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ADDR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_RESIDENCE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RESIDENCE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_RESIDENCE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RESIDENCE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_HDPNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "BAS_HDPNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_HDPNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "BAS_HDPNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_TELNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "BAS_TELNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_TELNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "BAS_TELNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_EMAIL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMAIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_EMAIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMAIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_MIL_STA";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MIL_STA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_MIL_STA";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MIL_STA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_MIL_MIL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MIL_MIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_MIL_MIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MIL_MIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_MIL_RNK";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 6;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MIL_RNK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_MIL_RNK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 6;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MIL_RNK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_MAR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_MAR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ACC_BANK1";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_BANK1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ACC_BANK1";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_BANK1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ACC_NAME1";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NAME1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ACC_NAME1";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NAME1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ACC_NO1";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NO1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ACC_NO1";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NO1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ACC_BANK2";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_BANK2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ACC_BANK2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_BANK2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ACC_NAME2";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NAME2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ACC_NAME2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NAME2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ACC_NO2";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NO2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ACC_NO2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NO2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_CONT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 6;
            param.IsNullable = true;
            param.SourceColumn = "BAS_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 6;
            param.IsNullable = true;
            param.SourceColumn = "BAS_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_INTERN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_INTERN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_INTERN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_INTERN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_INTERN_NO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BAS_INTERN_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_INTERN_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BAS_INTERN_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_EMP_SDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMP_SDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_EMP_SDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMP_SDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_EMP_EDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMP_EDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_EMP_EDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMP_EDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ENTDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ENTDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ENTDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ENTDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_RESDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RESDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_RESDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RESDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_LEVDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_LEVDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_LEVDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_LEVDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_REIDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_REIDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_REIDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_REIDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_WSTA";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_WSTA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_WSTA";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_WSTA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_STS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "BAS_STS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_STS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "BAS_STS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_POS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BAS_POS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_POS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BAS_POS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_DUT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DUT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_DUT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DUT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_DEPT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DEPT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_DEPT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DEPT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_RMK";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RMK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_RMK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RMK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_POS_DT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_POS_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_POS_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_POS_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_DUT_DT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DUT_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_DUT_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DUT_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_DEPT_DT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DEPT_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_DEPT_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DEPT_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_INTERN_DT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_INTERN_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_INTERN_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_INTERN_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DATASYS1";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DATASYS1";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DATASYS2";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DATASYS2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DATASYS3";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DATASYS3";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""EDU"".""THRM_BAS_LJM"" (""BAS_EMPNO"", ""BAS_RESNO"", ""BAS_NAME"", ""BAS_CNAME"", ""BAS_ENAME"", ""BAS_FIX"", ""BAS_ZIP"", ""BAS_ADDR"", ""BAS_RESIDENCE"", ""BAS_HDPNO"", ""BAS_TELNO"", ""BAS_EMAIL"", ""BAS_MIL_STA"", ""BAS_MIL_MIL"", ""BAS_MIL_RNK"", ""BAS_MAR"", ""BAS_ACC_BANK1"", ""BAS_ACC_NAME1"", ""BAS_ACC_NO1"", ""BAS_ACC_BANK2"", ""BAS_ACC_NAME2"", ""BAS_ACC_NO2"", ""BAS_CONT"", ""BAS_INTERN"", ""BAS_INTERN_NO"", ""BAS_EMP_SDATE"", ""BAS_EMP_EDATE"", ""BAS_ENTDATE"", ""BAS_RESDATE"", ""BAS_LEVDATE"", ""BAS_REIDATE"", ""BAS_WSTA"", ""BAS_STS"", ""BAS_POS"", ""BAS_DUT"", ""BAS_DEPT"", ""BAS_RMK"", ""BAS_POS_DT"", ""BAS_DUT_DT"", ""BAS_DEPT_DT"", ""BAS_INTERN_DT"", ""DATASYS1"", ""DATASYS2"", ""DATASYS3"") VALUES (:BAS_EMPNO, :BAS_RESNO, :BAS_NAME, :BAS_CNAME, :BAS_ENAME, :BAS_FIX, :BAS_ZIP, :BAS_ADDR, :BAS_RESIDENCE, :BAS_HDPNO, :BAS_TELNO, :BAS_EMAIL, :BAS_MIL_STA, :BAS_MIL_MIL, :BAS_MIL_RNK, :BAS_MAR, :BAS_ACC_BANK1, :BAS_ACC_NAME1, :BAS_ACC_NO1, :BAS_ACC_BANK2, :BAS_ACC_NAME2, :BAS_ACC_NO2, :BAS_CONT, :BAS_INTERN, :BAS_INTERN_NO, :BAS_EMP_SDATE, :BAS_EMP_EDATE, :BAS_ENTDATE, :BAS_RESDATE, :BAS_LEVDATE, :BAS_REIDATE, :BAS_WSTA, :BAS_STS, :BAS_POS, :BAS_DUT, :BAS_DEPT, :BAS_RMK, :BAS_POS_DT, :BAS_DUT_DT, :BAS_DEPT_DT, :BAS_INTERN_DT, :DATASYS1, :DATASYS2, :DATASYS3)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_EMPNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMPNO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_RESNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 82;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RESNO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_NAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_CNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_CNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ENAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ENAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_FIX";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "BAS_FIX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ZIP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ZIP";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ADDR";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_RESIDENCE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RESIDENCE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_HDPNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "BAS_HDPNO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_TELNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "BAS_TELNO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_EMAIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMAIL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_MIL_STA";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MIL_STA";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_MIL_MIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MIL_MIL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_MIL_RNK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 6;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MIL_RNK";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_MAR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MAR";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ACC_BANK1";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_BANK1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ACC_NAME1";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NAME1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ACC_NO1";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NO1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ACC_BANK2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_BANK2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ACC_NAME2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NAME2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ACC_NO2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NO2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 6;
            param.IsNullable = true;
            param.SourceColumn = "BAS_CONT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_INTERN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_INTERN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_INTERN_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BAS_INTERN_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_EMP_SDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMP_SDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_EMP_EDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMP_EDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ENTDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ENTDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_RESDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RESDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_LEVDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_LEVDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_REIDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_REIDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_WSTA";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_WSTA";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_STS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "BAS_STS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_POS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BAS_POS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_DUT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DUT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_DEPT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DEPT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_RMK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RMK";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_POS_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_POS_DT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_DUT_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DUT_DT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_DEPT_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DEPT_DT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_INTERN_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_INTERN_DT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DATASYS1";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DATASYS2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DATASYS3";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS3";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"EDU\".\"THRM_BAS_LJM\" SET \"BAS_EMPNO\" = :BAS_EMPNO, \"BAS_RESNO\" = :BAS_RESN" +
                "O, \"BAS_NAME\" = :BAS_NAME, \"BAS_CNAME\" = :BAS_CNAME, \"BAS_ENAME\" = :BAS_ENAME, \"" +
                "BAS_FIX\" = :BAS_FIX, \"BAS_ZIP\" = :BAS_ZIP, \"BAS_ADDR\" = :BAS_ADDR, \"BAS_RESIDENC" +
                "E\" = :BAS_RESIDENCE, \"BAS_HDPNO\" = :BAS_HDPNO, \"BAS_TELNO\" = :BAS_TELNO, \"BAS_EM" +
                "AIL\" = :BAS_EMAIL, \"BAS_MIL_STA\" = :BAS_MIL_STA, \"BAS_MIL_MIL\" = :BAS_MIL_MIL, \"" +
                "BAS_MIL_RNK\" = :BAS_MIL_RNK, \"BAS_MAR\" = :BAS_MAR, \"BAS_ACC_BANK1\" = :BAS_ACC_BA" +
                "NK1, \"BAS_ACC_NAME1\" = :BAS_ACC_NAME1, \"BAS_ACC_NO1\" = :BAS_ACC_NO1, \"BAS_ACC_BA" +
                "NK2\" = :BAS_ACC_BANK2, \"BAS_ACC_NAME2\" = :BAS_ACC_NAME2, \"BAS_ACC_NO2\" = :BAS_AC" +
                "C_NO2, \"BAS_CONT\" = :BAS_CONT, \"BAS_INTERN\" = :BAS_INTERN, \"BAS_INTERN_NO\" = :BA" +
                "S_INTERN_NO, \"BAS_EMP_SDATE\" = :BAS_EMP_SDATE, \"BAS_EMP_EDATE\" = :BAS_EMP_EDATE," +
                " \"BAS_ENTDATE\" = :BAS_ENTDATE, \"BAS_RESDATE\" = :BAS_RESDATE, \"BAS_LEVDATE\" = :BA" +
                "S_LEVDATE, \"BAS_REIDATE\" = :BAS_REIDATE, \"BAS_WSTA\" = :BAS_WSTA, \"BAS_STS\" = :BA" +
                "S_STS, \"BAS_POS\" = :BAS_POS, \"BAS_DUT\" = :BAS_DUT, \"BAS_DEPT\" = :BAS_DEPT, \"BAS_" +
                "RMK\" = :BAS_RMK, \"BAS_POS_DT\" = :BAS_POS_DT, \"BAS_DUT_DT\" = :BAS_DUT_DT, \"BAS_DE" +
                "PT_DT\" = :BAS_DEPT_DT, \"BAS_INTERN_DT\" = :BAS_INTERN_DT, \"DATASYS1\" = :DATASYS1," +
                " \"DATASYS2\" = :DATASYS2, \"DATASYS3\" = :DATASYS3 WHERE ((\"BAS_EMPNO\" = :Original_" +
                "BAS_EMPNO) AND ((:IsNull_BAS_RESNO = 1 AND \"BAS_RESNO\" IS NULL) OR (\"BAS_RESNO\" " +
                "= :Original_BAS_RESNO)) AND ((:IsNull_BAS_NAME = 1 AND \"BAS_NAME\" IS NULL) OR (\"" +
                "BAS_NAME\" = :Original_BAS_NAME)) AND ((:IsNull_BAS_CNAME = 1 AND \"BAS_CNAME\" IS " +
                "NULL) OR (\"BAS_CNAME\" = :Original_BAS_CNAME)) AND ((:IsNull_BAS_ENAME = 1 AND \"B" +
                "AS_ENAME\" IS NULL) OR (\"BAS_ENAME\" = :Original_BAS_ENAME)) AND ((:IsNull_BAS_FIX" +
                " = 1 AND \"BAS_FIX\" IS NULL) OR (\"BAS_FIX\" = :Original_BAS_FIX)) AND ((:IsNull_BA" +
                "S_ZIP = 1 AND \"BAS_ZIP\" IS NULL) OR (\"BAS_ZIP\" = :Original_BAS_ZIP)) AND ((:IsNu" +
                "ll_BAS_ADDR = 1 AND \"BAS_ADDR\" IS NULL) OR (\"BAS_ADDR\" = :Original_BAS_ADDR)) AN" +
                "D ((:IsNull_BAS_RESIDENCE = 1 AND \"BAS_RESIDENCE\" IS NULL) OR (\"BAS_RESIDENCE\" =" +
                " :Original_BAS_RESIDENCE)) AND ((:IsNull_BAS_HDPNO = 1 AND \"BAS_HDPNO\" IS NULL) " +
                "OR (\"BAS_HDPNO\" = :Original_BAS_HDPNO)) AND ((:IsNull_BAS_TELNO = 1 AND \"BAS_TEL" +
                "NO\" IS NULL) OR (\"BAS_TELNO\" = :Original_BAS_TELNO)) AND ((:IsNull_BAS_EMAIL = 1" +
                " AND \"BAS_EMAIL\" IS NULL) OR (\"BAS_EMAIL\" = :Original_BAS_EMAIL)) AND ((:IsNull_" +
                "BAS_MIL_STA = 1 AND \"BAS_MIL_STA\" IS NULL) OR (\"BAS_MIL_STA\" = :Original_BAS_MIL" +
                "_STA)) AND ((:IsNull_BAS_MIL_MIL = 1 AND \"BAS_MIL_MIL\" IS NULL) OR (\"BAS_MIL_MIL" +
                "\" = :Original_BAS_MIL_MIL)) AND ((:IsNull_BAS_MIL_RNK = 1 AND \"BAS_MIL_RNK\" IS N" +
                "ULL) OR (\"BAS_MIL_RNK\" = :Original_BAS_MIL_RNK)) AND ((:IsNull_BAS_MAR = 1 AND \"" +
                "BAS_MAR\" IS NULL) OR (\"BAS_MAR\" = :Original_BAS_MAR)) AND ((:IsNull_BAS_ACC_BANK" +
                "1 = 1 AND \"BAS_ACC_BANK1\" IS NULL) OR (\"BAS_ACC_BANK1\" = :Original_BAS_ACC_BANK1" +
                ")) AND ((:IsNull_BAS_ACC_NAME1 = 1 AND \"BAS_ACC_NAME1\" IS NULL) OR (\"BAS_ACC_NAM" +
                "E1\" = :Original_BAS_ACC_NAME1)) AND ((:IsNull_BAS_ACC_NO1 = 1 AND \"BAS_ACC_NO1\" " +
                "IS NULL) OR (\"BAS_ACC_NO1\" = :Original_BAS_ACC_NO1)) AND ((:IsNull_BAS_ACC_BANK2" +
                " = 1 AND \"BAS_ACC_BANK2\" IS NULL) OR (\"BAS_ACC_BANK2\" = :Original_BAS_ACC_BANK2)" +
                ") AND ((:IsNull_BAS_ACC_NAME2 = 1 AND \"BAS_ACC_NAME2\" IS NULL) OR (\"BAS_ACC_NAME" +
                "2\" = :Original_BAS_ACC_NAME2)) AND ((:IsNull_BAS_ACC_NO2 = 1 AND \"BAS_ACC_NO2\" I" +
                "S NULL) OR (\"BAS_ACC_NO2\" = :Original_BAS_ACC_NO2)) AND ((:IsNull_BAS_CONT = 1 A" +
                "ND \"BAS_CONT\" IS NULL) OR (\"BAS_CONT\" = :Original_BAS_CONT)) AND ((:IsNull_BAS_I" +
                "NTERN = 1 AND \"BAS_INTERN\" IS NULL) OR (\"BAS_INTERN\" = :Original_BAS_INTERN)) AN" +
                "D ((:IsNull_BAS_INTERN_NO = 1 AND \"BAS_INTERN_NO\" IS NULL) OR (\"BAS_INTERN_NO\" =" +
                " :Original_BAS_INTERN_NO)) AND ((:IsNull_BAS_EMP_SDATE = 1 AND \"BAS_EMP_SDATE\" I" +
                "S NULL) OR (\"BAS_EMP_SDATE\" = :Original_BAS_EMP_SDATE)) AND ((:IsNull_BAS_EMP_ED" +
                "ATE = 1 AND \"BAS_EMP_EDATE\" IS NULL) OR (\"BAS_EMP_EDATE\" = :Original_BAS_EMP_EDA" +
                "TE)) AND ((:IsNull_BAS_ENTDATE = 1 AND \"BAS_ENTDATE\" IS NULL) OR (\"BAS_ENTDATE\" " +
                "= :Original_BAS_ENTDATE)) AND ((:IsNull_BAS_RESDATE = 1 AND \"BAS_RESDATE\" IS NUL" +
                "L) OR (\"BAS_RESDATE\" = :Original_BAS_RESDATE)) AND ((:IsNull_BAS_LEVDATE = 1 AND" +
                " \"BAS_LEVDATE\" IS NULL) OR (\"BAS_LEVDATE\" = :Original_BAS_LEVDATE)) AND ((:IsNul" +
                "l_BAS_REIDATE = 1 AND \"BAS_REIDATE\" IS NULL) OR (\"BAS_REIDATE\" = :Original_BAS_R" +
                "EIDATE)) AND ((:IsNull_BAS_WSTA = 1 AND \"BAS_WSTA\" IS NULL) OR (\"BAS_WSTA\" = :Or" +
                "iginal_BAS_WSTA)) AND ((:IsNull_BAS_STS = 1 AND \"BAS_STS\" IS NULL) OR (\"BAS_STS\"" +
                " = :Original_BAS_STS)) AND ((:IsNull_BAS_POS = 1 AND \"BAS_POS\" IS NULL) OR (\"BAS" +
                "_POS\" = :Original_BAS_POS)) AND ((:IsNull_BAS_DUT = 1 AND \"BAS_DUT\" IS NULL) OR " +
                "(\"BAS_DUT\" = :Original_BAS_DUT)) AND ((:IsNull_BAS_DEPT = 1 AND \"BAS_DEPT\" IS NU" +
                "LL) OR (\"BAS_DEPT\" = :Original_BAS_DEPT)) AND ((:IsNull_BAS_RMK = 1 AND \"BAS_RMK" +
                "\" IS NULL) OR (\"BAS_RMK\" = :Original_BAS_RMK)) AND ((:IsNull_BAS_POS_DT = 1 AND " +
                "\"BAS_POS_DT\" IS NULL) OR (\"BAS_POS_DT\" = :Original_BAS_POS_DT)) AND ((:IsNull_BA" +
                "S_DUT_DT = 1 AND \"BAS_DUT_DT\" IS NULL) OR (\"BAS_DUT_DT\" = :Original_BAS_DUT_DT))" +
                " AND ((:IsNull_BAS_DEPT_DT = 1 AND \"BAS_DEPT_DT\" IS NULL) OR (\"BAS_DEPT_DT\" = :O" +
                "riginal_BAS_DEPT_DT)) AND ((:IsNull_BAS_INTERN_DT = 1 AND \"BAS_INTERN_DT\" IS NUL" +
                "L) OR (\"BAS_INTERN_DT\" = :Original_BAS_INTERN_DT)) AND ((:IsNull_DATASYS1 = 1 AN" +
                "D \"DATASYS1\" IS NULL) OR (\"DATASYS1\" = :Original_DATASYS1)) AND ((:IsNull_DATASY" +
                "S2 = 1 AND \"DATASYS2\" IS NULL) OR (\"DATASYS2\" = :Original_DATASYS2)) AND ((:IsNu" +
                "ll_DATASYS3 = 1 AND \"DATASYS3\" IS NULL) OR (\"DATASYS3\" = :Original_DATASYS3)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_EMPNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMPNO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_RESNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 82;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RESNO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_NAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_CNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_CNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ENAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ENAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_FIX";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "BAS_FIX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ZIP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ZIP";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ADDR";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_RESIDENCE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RESIDENCE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_HDPNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "BAS_HDPNO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_TELNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "BAS_TELNO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_EMAIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMAIL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_MIL_STA";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MIL_STA";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_MIL_MIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MIL_MIL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_MIL_RNK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 6;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MIL_RNK";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_MAR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MAR";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ACC_BANK1";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_BANK1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ACC_NAME1";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NAME1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ACC_NO1";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NO1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ACC_BANK2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_BANK2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ACC_NAME2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NAME2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ACC_NO2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NO2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 6;
            param.IsNullable = true;
            param.SourceColumn = "BAS_CONT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_INTERN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_INTERN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_INTERN_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BAS_INTERN_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_EMP_SDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMP_SDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_EMP_EDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMP_EDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_ENTDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ENTDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_RESDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RESDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_LEVDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_LEVDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_REIDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_REIDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_WSTA";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_WSTA";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_STS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "BAS_STS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_POS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BAS_POS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_DUT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DUT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_DEPT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DEPT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_RMK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RMK";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_POS_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_POS_DT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_DUT_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DUT_DT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_DEPT_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DEPT_DT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BAS_INTERN_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_INTERN_DT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DATASYS1";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DATASYS2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DATASYS3";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_EMPNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMPNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_RESNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 82;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RESNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_RESNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 82;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RESNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_NAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_CNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_CNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_CNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_CNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ENAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ENAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ENAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_FIX";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "BAS_FIX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_FIX";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "BAS_FIX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ZIP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ZIP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ZIP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ZIP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ADDR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_RESIDENCE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RESIDENCE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_RESIDENCE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RESIDENCE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_HDPNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "BAS_HDPNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_HDPNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "BAS_HDPNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_TELNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "BAS_TELNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_TELNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "BAS_TELNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_EMAIL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMAIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_EMAIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMAIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_MIL_STA";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MIL_STA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_MIL_STA";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MIL_STA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_MIL_MIL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MIL_MIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_MIL_MIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MIL_MIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_MIL_RNK";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 6;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MIL_RNK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_MIL_RNK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 6;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MIL_RNK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_MAR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_MAR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_MAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ACC_BANK1";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_BANK1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ACC_BANK1";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_BANK1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ACC_NAME1";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NAME1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ACC_NAME1";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NAME1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ACC_NO1";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NO1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ACC_NO1";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NO1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ACC_BANK2";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_BANK2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ACC_BANK2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_BANK2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ACC_NAME2";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NAME2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ACC_NAME2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NAME2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ACC_NO2";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NO2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ACC_NO2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ACC_NO2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_CONT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 6;
            param.IsNullable = true;
            param.SourceColumn = "BAS_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 6;
            param.IsNullable = true;
            param.SourceColumn = "BAS_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_INTERN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_INTERN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_INTERN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_INTERN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_INTERN_NO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BAS_INTERN_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_INTERN_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BAS_INTERN_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_EMP_SDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMP_SDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_EMP_SDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMP_SDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_EMP_EDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMP_EDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_EMP_EDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_EMP_EDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_ENTDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ENTDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_ENTDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_ENTDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_RESDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RESDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_RESDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RESDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_LEVDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_LEVDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_LEVDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_LEVDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_REIDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_REIDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_REIDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_REIDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_WSTA";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_WSTA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_WSTA";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "BAS_WSTA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_STS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "BAS_STS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_STS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "BAS_STS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_POS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BAS_POS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_POS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BAS_POS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_DUT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DUT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_DUT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DUT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_DEPT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DEPT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_DEPT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DEPT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_RMK";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RMK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_RMK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "BAS_RMK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_POS_DT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_POS_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_POS_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_POS_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_DUT_DT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DUT_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_DUT_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DUT_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_DEPT_DT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DEPT_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_DEPT_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_DEPT_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BAS_INTERN_DT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_INTERN_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BAS_INTERN_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BAS_INTERN_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DATASYS1";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DATASYS1";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DATASYS2";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DATASYS2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DATASYS3";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DATASYS3";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::Project1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT BAS_EMPNO, BAS_RESNO, BAS_NAME, BAS_CNAME, BAS_ENAME, BAS_FIX, BAS_ZIP, BAS_ADDR, BAS_RESIDENCE, BAS_HDPNO, BAS_TELNO, BAS_EMAIL, BAS_MIL_STA, BAS_MIL_MIL, BAS_MIL_RNK, BAS_MAR, BAS_ACC_BANK1, BAS_ACC_NAME1, BAS_ACC_NO1, BAS_ACC_BANK2, BAS_ACC_NAME2, BAS_ACC_NO2, BAS_CONT, BAS_INTERN, BAS_INTERN_NO, BAS_EMP_SDATE, BAS_EMP_EDATE, BAS_ENTDATE, BAS_RESDATE, BAS_LEVDATE, BAS_REIDATE, BAS_WSTA, BAS_STS, BAS_POS, BAS_DUT, BAS_DEPT, BAS_RMK, BAS_POS_DT, BAS_DUT_DT, BAS_DEPT_DT, BAS_INTERN_DT, DATASYS1, DATASYS2, DATASYS3 FROM EDU.THRM_BAS_LJM";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.THRM_BAS_LJMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.THRM_BAS_LJMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.THRM_BAS_LJMDataTable dataTable = new DataSet2.THRM_BAS_LJMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.THRM_BAS_LJMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "THRM_BAS_LJM");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_BAS_EMPNO, 
                    string Original_BAS_RESNO, 
                    string Original_BAS_NAME, 
                    string Original_BAS_CNAME, 
                    string Original_BAS_ENAME, 
                    string Original_BAS_FIX, 
                    string Original_BAS_ZIP, 
                    string Original_BAS_ADDR, 
                    string Original_BAS_RESIDENCE, 
                    string Original_BAS_HDPNO, 
                    string Original_BAS_TELNO, 
                    string Original_BAS_EMAIL, 
                    string Original_BAS_MIL_STA, 
                    string Original_BAS_MIL_MIL, 
                    string Original_BAS_MIL_RNK, 
                    string Original_BAS_MAR, 
                    string Original_BAS_ACC_BANK1, 
                    string Original_BAS_ACC_NAME1, 
                    string Original_BAS_ACC_NO1, 
                    string Original_BAS_ACC_BANK2, 
                    string Original_BAS_ACC_NAME2, 
                    string Original_BAS_ACC_NO2, 
                    string Original_BAS_CONT, 
                    string Original_BAS_INTERN, 
                    global::System.Nullable<short> Original_BAS_INTERN_NO, 
                    string Original_BAS_EMP_SDATE, 
                    string Original_BAS_EMP_EDATE, 
                    string Original_BAS_ENTDATE, 
                    string Original_BAS_RESDATE, 
                    string Original_BAS_LEVDATE, 
                    string Original_BAS_REIDATE, 
                    string Original_BAS_WSTA, 
                    string Original_BAS_STS, 
                    string Original_BAS_POS, 
                    string Original_BAS_DUT, 
                    string Original_BAS_DEPT, 
                    string Original_BAS_RMK, 
                    string Original_BAS_POS_DT, 
                    string Original_BAS_DUT_DT, 
                    string Original_BAS_DEPT_DT, 
                    string Original_BAS_INTERN_DT, 
                    global::System.Nullable<global::System.DateTime> Original_DATASYS1, 
                    string Original_DATASYS2, 
                    string Original_DATASYS3) {
            if ((Original_BAS_EMPNO == null)) {
                throw new global::System.ArgumentNullException("Original_BAS_EMPNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_BAS_EMPNO));
            }
            if ((Original_BAS_RESNO == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_BAS_RESNO));
            }
            if ((Original_BAS_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_BAS_NAME));
            }
            if ((Original_BAS_CNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_BAS_CNAME));
            }
            if ((Original_BAS_ENAME == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_BAS_ENAME));
            }
            if ((Original_BAS_FIX == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_BAS_FIX));
            }
            if ((Original_BAS_ZIP == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_BAS_ZIP));
            }
            if ((Original_BAS_ADDR == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_BAS_ADDR));
            }
            if ((Original_BAS_RESIDENCE == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_BAS_RESIDENCE));
            }
            if ((Original_BAS_HDPNO == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_BAS_HDPNO));
            }
            if ((Original_BAS_TELNO == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_BAS_TELNO));
            }
            if ((Original_BAS_EMAIL == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_BAS_EMAIL));
            }
            if ((Original_BAS_MIL_STA == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_BAS_MIL_STA));
            }
            if ((Original_BAS_MIL_MIL == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_BAS_MIL_MIL));
            }
            if ((Original_BAS_MIL_RNK == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_BAS_MIL_RNK));
            }
            if ((Original_BAS_MAR == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_BAS_MAR));
            }
            if ((Original_BAS_ACC_BANK1 == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_BAS_ACC_BANK1));
            }
            if ((Original_BAS_ACC_NAME1 == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_BAS_ACC_NAME1));
            }
            if ((Original_BAS_ACC_NO1 == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_BAS_ACC_NO1));
            }
            if ((Original_BAS_ACC_BANK2 == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_BAS_ACC_BANK2));
            }
            if ((Original_BAS_ACC_NAME2 == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_BAS_ACC_NAME2));
            }
            if ((Original_BAS_ACC_NO2 == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_BAS_ACC_NO2));
            }
            if ((Original_BAS_CONT == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_BAS_CONT));
            }
            if ((Original_BAS_INTERN == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_BAS_INTERN));
            }
            if ((Original_BAS_INTERN_NO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((short)(Original_BAS_INTERN_NO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_BAS_EMP_SDATE == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_BAS_EMP_SDATE));
            }
            if ((Original_BAS_EMP_EDATE == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_BAS_EMP_EDATE));
            }
            if ((Original_BAS_ENTDATE == null)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((string)(Original_BAS_ENTDATE));
            }
            if ((Original_BAS_RESDATE == null)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_BAS_RESDATE));
            }
            if ((Original_BAS_LEVDATE == null)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_BAS_LEVDATE));
            }
            if ((Original_BAS_REIDATE == null)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_BAS_REIDATE));
            }
            if ((Original_BAS_WSTA == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_BAS_WSTA));
            }
            if ((Original_BAS_STS == null)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((string)(Original_BAS_STS));
            }
            if ((Original_BAS_POS == null)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((string)(Original_BAS_POS));
            }
            if ((Original_BAS_DUT == null)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((string)(Original_BAS_DUT));
            }
            if ((Original_BAS_DEPT == null)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((string)(Original_BAS_DEPT));
            }
            if ((Original_BAS_RMK == null)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((string)(Original_BAS_RMK));
            }
            if ((Original_BAS_POS_DT == null)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((string)(Original_BAS_POS_DT));
            }
            if ((Original_BAS_DUT_DT == null)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((string)(Original_BAS_DUT_DT));
            }
            if ((Original_BAS_DEPT_DT == null)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((string)(Original_BAS_DEPT_DT));
            }
            if ((Original_BAS_INTERN_DT == null)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((string)(Original_BAS_INTERN_DT));
            }
            if ((Original_DATASYS1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((System.DateTime)(Original_DATASYS1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_DATASYS2 == null)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((string)(Original_DATASYS2));
            }
            if ((Original_DATASYS3 == null)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((string)(Original_DATASYS3));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string BAS_EMPNO, 
                    string BAS_RESNO, 
                    string BAS_NAME, 
                    string BAS_CNAME, 
                    string BAS_ENAME, 
                    string BAS_FIX, 
                    string BAS_ZIP, 
                    string BAS_ADDR, 
                    string BAS_RESIDENCE, 
                    string BAS_HDPNO, 
                    string BAS_TELNO, 
                    string BAS_EMAIL, 
                    string BAS_MIL_STA, 
                    string BAS_MIL_MIL, 
                    string BAS_MIL_RNK, 
                    string BAS_MAR, 
                    string BAS_ACC_BANK1, 
                    string BAS_ACC_NAME1, 
                    string BAS_ACC_NO1, 
                    string BAS_ACC_BANK2, 
                    string BAS_ACC_NAME2, 
                    string BAS_ACC_NO2, 
                    string BAS_CONT, 
                    string BAS_INTERN, 
                    global::System.Nullable<short> BAS_INTERN_NO, 
                    string BAS_EMP_SDATE, 
                    string BAS_EMP_EDATE, 
                    string BAS_ENTDATE, 
                    string BAS_RESDATE, 
                    string BAS_LEVDATE, 
                    string BAS_REIDATE, 
                    string BAS_WSTA, 
                    string BAS_STS, 
                    string BAS_POS, 
                    string BAS_DUT, 
                    string BAS_DEPT, 
                    string BAS_RMK, 
                    string BAS_POS_DT, 
                    string BAS_DUT_DT, 
                    string BAS_DEPT_DT, 
                    string BAS_INTERN_DT, 
                    global::System.Nullable<global::System.DateTime> DATASYS1, 
                    string DATASYS2, 
                    string DATASYS3) {
            if ((BAS_EMPNO == null)) {
                throw new global::System.ArgumentNullException("BAS_EMPNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(BAS_EMPNO));
            }
            if ((BAS_RESNO == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BAS_RESNO));
            }
            if ((BAS_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(BAS_NAME));
            }
            if ((BAS_CNAME == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(BAS_CNAME));
            }
            if ((BAS_ENAME == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(BAS_ENAME));
            }
            if ((BAS_FIX == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(BAS_FIX));
            }
            if ((BAS_ZIP == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(BAS_ZIP));
            }
            if ((BAS_ADDR == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(BAS_ADDR));
            }
            if ((BAS_RESIDENCE == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(BAS_RESIDENCE));
            }
            if ((BAS_HDPNO == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(BAS_HDPNO));
            }
            if ((BAS_TELNO == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(BAS_TELNO));
            }
            if ((BAS_EMAIL == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(BAS_EMAIL));
            }
            if ((BAS_MIL_STA == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(BAS_MIL_STA));
            }
            if ((BAS_MIL_MIL == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(BAS_MIL_MIL));
            }
            if ((BAS_MIL_RNK == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(BAS_MIL_RNK));
            }
            if ((BAS_MAR == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(BAS_MAR));
            }
            if ((BAS_ACC_BANK1 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(BAS_ACC_BANK1));
            }
            if ((BAS_ACC_NAME1 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(BAS_ACC_NAME1));
            }
            if ((BAS_ACC_NO1 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(BAS_ACC_NO1));
            }
            if ((BAS_ACC_BANK2 == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(BAS_ACC_BANK2));
            }
            if ((BAS_ACC_NAME2 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(BAS_ACC_NAME2));
            }
            if ((BAS_ACC_NO2 == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(BAS_ACC_NO2));
            }
            if ((BAS_CONT == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(BAS_CONT));
            }
            if ((BAS_INTERN == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(BAS_INTERN));
            }
            if ((BAS_INTERN_NO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((short)(BAS_INTERN_NO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((BAS_EMP_SDATE == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(BAS_EMP_SDATE));
            }
            if ((BAS_EMP_EDATE == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(BAS_EMP_EDATE));
            }
            if ((BAS_ENTDATE == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(BAS_ENTDATE));
            }
            if ((BAS_RESDATE == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(BAS_RESDATE));
            }
            if ((BAS_LEVDATE == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(BAS_LEVDATE));
            }
            if ((BAS_REIDATE == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(BAS_REIDATE));
            }
            if ((BAS_WSTA == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(BAS_WSTA));
            }
            if ((BAS_STS == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(BAS_STS));
            }
            if ((BAS_POS == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(BAS_POS));
            }
            if ((BAS_DUT == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(BAS_DUT));
            }
            if ((BAS_DEPT == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(BAS_DEPT));
            }
            if ((BAS_RMK == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(BAS_RMK));
            }
            if ((BAS_POS_DT == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(BAS_POS_DT));
            }
            if ((BAS_DUT_DT == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(BAS_DUT_DT));
            }
            if ((BAS_DEPT_DT == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(BAS_DEPT_DT));
            }
            if ((BAS_INTERN_DT == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(BAS_INTERN_DT));
            }
            if ((DATASYS1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((System.DateTime)(DATASYS1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((DATASYS2 == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(DATASYS2));
            }
            if ((DATASYS3 == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(DATASYS3));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string BAS_EMPNO, 
                    string BAS_RESNO, 
                    string BAS_NAME, 
                    string BAS_CNAME, 
                    string BAS_ENAME, 
                    string BAS_FIX, 
                    string BAS_ZIP, 
                    string BAS_ADDR, 
                    string BAS_RESIDENCE, 
                    string BAS_HDPNO, 
                    string BAS_TELNO, 
                    string BAS_EMAIL, 
                    string BAS_MIL_STA, 
                    string BAS_MIL_MIL, 
                    string BAS_MIL_RNK, 
                    string BAS_MAR, 
                    string BAS_ACC_BANK1, 
                    string BAS_ACC_NAME1, 
                    string BAS_ACC_NO1, 
                    string BAS_ACC_BANK2, 
                    string BAS_ACC_NAME2, 
                    string BAS_ACC_NO2, 
                    string BAS_CONT, 
                    string BAS_INTERN, 
                    global::System.Nullable<short> BAS_INTERN_NO, 
                    string BAS_EMP_SDATE, 
                    string BAS_EMP_EDATE, 
                    string BAS_ENTDATE, 
                    string BAS_RESDATE, 
                    string BAS_LEVDATE, 
                    string BAS_REIDATE, 
                    string BAS_WSTA, 
                    string BAS_STS, 
                    string BAS_POS, 
                    string BAS_DUT, 
                    string BAS_DEPT, 
                    string BAS_RMK, 
                    string BAS_POS_DT, 
                    string BAS_DUT_DT, 
                    string BAS_DEPT_DT, 
                    string BAS_INTERN_DT, 
                    global::System.Nullable<global::System.DateTime> DATASYS1, 
                    string DATASYS2, 
                    string DATASYS3, 
                    string Original_BAS_EMPNO, 
                    string Original_BAS_RESNO, 
                    string Original_BAS_NAME, 
                    string Original_BAS_CNAME, 
                    string Original_BAS_ENAME, 
                    string Original_BAS_FIX, 
                    string Original_BAS_ZIP, 
                    string Original_BAS_ADDR, 
                    string Original_BAS_RESIDENCE, 
                    string Original_BAS_HDPNO, 
                    string Original_BAS_TELNO, 
                    string Original_BAS_EMAIL, 
                    string Original_BAS_MIL_STA, 
                    string Original_BAS_MIL_MIL, 
                    string Original_BAS_MIL_RNK, 
                    string Original_BAS_MAR, 
                    string Original_BAS_ACC_BANK1, 
                    string Original_BAS_ACC_NAME1, 
                    string Original_BAS_ACC_NO1, 
                    string Original_BAS_ACC_BANK2, 
                    string Original_BAS_ACC_NAME2, 
                    string Original_BAS_ACC_NO2, 
                    string Original_BAS_CONT, 
                    string Original_BAS_INTERN, 
                    global::System.Nullable<short> Original_BAS_INTERN_NO, 
                    string Original_BAS_EMP_SDATE, 
                    string Original_BAS_EMP_EDATE, 
                    string Original_BAS_ENTDATE, 
                    string Original_BAS_RESDATE, 
                    string Original_BAS_LEVDATE, 
                    string Original_BAS_REIDATE, 
                    string Original_BAS_WSTA, 
                    string Original_BAS_STS, 
                    string Original_BAS_POS, 
                    string Original_BAS_DUT, 
                    string Original_BAS_DEPT, 
                    string Original_BAS_RMK, 
                    string Original_BAS_POS_DT, 
                    string Original_BAS_DUT_DT, 
                    string Original_BAS_DEPT_DT, 
                    string Original_BAS_INTERN_DT, 
                    global::System.Nullable<global::System.DateTime> Original_DATASYS1, 
                    string Original_DATASYS2, 
                    string Original_DATASYS3) {
            if ((BAS_EMPNO == null)) {
                throw new global::System.ArgumentNullException("BAS_EMPNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(BAS_EMPNO));
            }
            if ((BAS_RESNO == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(BAS_RESNO));
            }
            if ((BAS_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(BAS_NAME));
            }
            if ((BAS_CNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(BAS_CNAME));
            }
            if ((BAS_ENAME == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(BAS_ENAME));
            }
            if ((BAS_FIX == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(BAS_FIX));
            }
            if ((BAS_ZIP == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(BAS_ZIP));
            }
            if ((BAS_ADDR == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(BAS_ADDR));
            }
            if ((BAS_RESIDENCE == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(BAS_RESIDENCE));
            }
            if ((BAS_HDPNO == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(BAS_HDPNO));
            }
            if ((BAS_TELNO == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(BAS_TELNO));
            }
            if ((BAS_EMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(BAS_EMAIL));
            }
            if ((BAS_MIL_STA == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(BAS_MIL_STA));
            }
            if ((BAS_MIL_MIL == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(BAS_MIL_MIL));
            }
            if ((BAS_MIL_RNK == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(BAS_MIL_RNK));
            }
            if ((BAS_MAR == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(BAS_MAR));
            }
            if ((BAS_ACC_BANK1 == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(BAS_ACC_BANK1));
            }
            if ((BAS_ACC_NAME1 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(BAS_ACC_NAME1));
            }
            if ((BAS_ACC_NO1 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(BAS_ACC_NO1));
            }
            if ((BAS_ACC_BANK2 == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(BAS_ACC_BANK2));
            }
            if ((BAS_ACC_NAME2 == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(BAS_ACC_NAME2));
            }
            if ((BAS_ACC_NO2 == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(BAS_ACC_NO2));
            }
            if ((BAS_CONT == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(BAS_CONT));
            }
            if ((BAS_INTERN == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(BAS_INTERN));
            }
            if ((BAS_INTERN_NO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((short)(BAS_INTERN_NO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((BAS_EMP_SDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(BAS_EMP_SDATE));
            }
            if ((BAS_EMP_EDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(BAS_EMP_EDATE));
            }
            if ((BAS_ENTDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(BAS_ENTDATE));
            }
            if ((BAS_RESDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(BAS_RESDATE));
            }
            if ((BAS_LEVDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(BAS_LEVDATE));
            }
            if ((BAS_REIDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(BAS_REIDATE));
            }
            if ((BAS_WSTA == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(BAS_WSTA));
            }
            if ((BAS_STS == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(BAS_STS));
            }
            if ((BAS_POS == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(BAS_POS));
            }
            if ((BAS_DUT == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(BAS_DUT));
            }
            if ((BAS_DEPT == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(BAS_DEPT));
            }
            if ((BAS_RMK == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(BAS_RMK));
            }
            if ((BAS_POS_DT == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(BAS_POS_DT));
            }
            if ((BAS_DUT_DT == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(BAS_DUT_DT));
            }
            if ((BAS_DEPT_DT == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(BAS_DEPT_DT));
            }
            if ((BAS_INTERN_DT == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(BAS_INTERN_DT));
            }
            if ((DATASYS1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((System.DateTime)(DATASYS1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((DATASYS2 == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(DATASYS2));
            }
            if ((DATASYS3 == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(DATASYS3));
            }
            if ((Original_BAS_EMPNO == null)) {
                throw new global::System.ArgumentNullException("Original_BAS_EMPNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_BAS_EMPNO));
            }
            if ((Original_BAS_RESNO == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_BAS_RESNO));
            }
            if ((Original_BAS_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_BAS_NAME));
            }
            if ((Original_BAS_CNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_BAS_CNAME));
            }
            if ((Original_BAS_ENAME == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_BAS_ENAME));
            }
            if ((Original_BAS_FIX == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_BAS_FIX));
            }
            if ((Original_BAS_ZIP == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_BAS_ZIP));
            }
            if ((Original_BAS_ADDR == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_BAS_ADDR));
            }
            if ((Original_BAS_RESIDENCE == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_BAS_RESIDENCE));
            }
            if ((Original_BAS_HDPNO == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_BAS_HDPNO));
            }
            if ((Original_BAS_TELNO == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_BAS_TELNO));
            }
            if ((Original_BAS_EMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_BAS_EMAIL));
            }
            if ((Original_BAS_MIL_STA == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_BAS_MIL_STA));
            }
            if ((Original_BAS_MIL_MIL == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_BAS_MIL_MIL));
            }
            if ((Original_BAS_MIL_RNK == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_BAS_MIL_RNK));
            }
            if ((Original_BAS_MAR == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(Original_BAS_MAR));
            }
            if ((Original_BAS_ACC_BANK1 == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(Original_BAS_ACC_BANK1));
            }
            if ((Original_BAS_ACC_NAME1 == null)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(Original_BAS_ACC_NAME1));
            }
            if ((Original_BAS_ACC_NO1 == null)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(Original_BAS_ACC_NO1));
            }
            if ((Original_BAS_ACC_BANK2 == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(Original_BAS_ACC_BANK2));
            }
            if ((Original_BAS_ACC_NAME2 == null)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(Original_BAS_ACC_NAME2));
            }
            if ((Original_BAS_ACC_NO2 == null)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(Original_BAS_ACC_NO2));
            }
            if ((Original_BAS_CONT == null)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(Original_BAS_CONT));
            }
            if ((Original_BAS_INTERN == null)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(Original_BAS_INTERN));
            }
            if ((Original_BAS_INTERN_NO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((short)(Original_BAS_INTERN_NO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((Original_BAS_EMP_SDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(Original_BAS_EMP_SDATE));
            }
            if ((Original_BAS_EMP_EDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((string)(Original_BAS_EMP_EDATE));
            }
            if ((Original_BAS_ENTDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((string)(Original_BAS_ENTDATE));
            }
            if ((Original_BAS_RESDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((string)(Original_BAS_RESDATE));
            }
            if ((Original_BAS_LEVDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((string)(Original_BAS_LEVDATE));
            }
            if ((Original_BAS_REIDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(Original_BAS_REIDATE));
            }
            if ((Original_BAS_WSTA == null)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(Original_BAS_WSTA));
            }
            if ((Original_BAS_STS == null)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(Original_BAS_STS));
            }
            if ((Original_BAS_POS == null)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((string)(Original_BAS_POS));
            }
            if ((Original_BAS_DUT == null)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((string)(Original_BAS_DUT));
            }
            if ((Original_BAS_DEPT == null)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((string)(Original_BAS_DEPT));
            }
            if ((Original_BAS_RMK == null)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((string)(Original_BAS_RMK));
            }
            if ((Original_BAS_POS_DT == null)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[118].Value = ((string)(Original_BAS_POS_DT));
            }
            if ((Original_BAS_DUT_DT == null)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((string)(Original_BAS_DUT_DT));
            }
            if ((Original_BAS_DEPT_DT == null)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((string)(Original_BAS_DEPT_DT));
            }
            if ((Original_BAS_INTERN_DT == null)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((string)(Original_BAS_INTERN_DT));
            }
            if ((Original_DATASYS1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((System.DateTime)(Original_DATASYS1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((Original_DATASYS2 == null)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[128].Value = ((string)(Original_DATASYS2));
            }
            if ((Original_DATASYS3 == null)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((string)(Original_DATASYS3));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string BAS_RESNO, 
                    string BAS_NAME, 
                    string BAS_CNAME, 
                    string BAS_ENAME, 
                    string BAS_FIX, 
                    string BAS_ZIP, 
                    string BAS_ADDR, 
                    string BAS_RESIDENCE, 
                    string BAS_HDPNO, 
                    string BAS_TELNO, 
                    string BAS_EMAIL, 
                    string BAS_MIL_STA, 
                    string BAS_MIL_MIL, 
                    string BAS_MIL_RNK, 
                    string BAS_MAR, 
                    string BAS_ACC_BANK1, 
                    string BAS_ACC_NAME1, 
                    string BAS_ACC_NO1, 
                    string BAS_ACC_BANK2, 
                    string BAS_ACC_NAME2, 
                    string BAS_ACC_NO2, 
                    string BAS_CONT, 
                    string BAS_INTERN, 
                    global::System.Nullable<short> BAS_INTERN_NO, 
                    string BAS_EMP_SDATE, 
                    string BAS_EMP_EDATE, 
                    string BAS_ENTDATE, 
                    string BAS_RESDATE, 
                    string BAS_LEVDATE, 
                    string BAS_REIDATE, 
                    string BAS_WSTA, 
                    string BAS_STS, 
                    string BAS_POS, 
                    string BAS_DUT, 
                    string BAS_DEPT, 
                    string BAS_RMK, 
                    string BAS_POS_DT, 
                    string BAS_DUT_DT, 
                    string BAS_DEPT_DT, 
                    string BAS_INTERN_DT, 
                    global::System.Nullable<global::System.DateTime> DATASYS1, 
                    string DATASYS2, 
                    string DATASYS3, 
                    string Original_BAS_EMPNO, 
                    string Original_BAS_RESNO, 
                    string Original_BAS_NAME, 
                    string Original_BAS_CNAME, 
                    string Original_BAS_ENAME, 
                    string Original_BAS_FIX, 
                    string Original_BAS_ZIP, 
                    string Original_BAS_ADDR, 
                    string Original_BAS_RESIDENCE, 
                    string Original_BAS_HDPNO, 
                    string Original_BAS_TELNO, 
                    string Original_BAS_EMAIL, 
                    string Original_BAS_MIL_STA, 
                    string Original_BAS_MIL_MIL, 
                    string Original_BAS_MIL_RNK, 
                    string Original_BAS_MAR, 
                    string Original_BAS_ACC_BANK1, 
                    string Original_BAS_ACC_NAME1, 
                    string Original_BAS_ACC_NO1, 
                    string Original_BAS_ACC_BANK2, 
                    string Original_BAS_ACC_NAME2, 
                    string Original_BAS_ACC_NO2, 
                    string Original_BAS_CONT, 
                    string Original_BAS_INTERN, 
                    global::System.Nullable<short> Original_BAS_INTERN_NO, 
                    string Original_BAS_EMP_SDATE, 
                    string Original_BAS_EMP_EDATE, 
                    string Original_BAS_ENTDATE, 
                    string Original_BAS_RESDATE, 
                    string Original_BAS_LEVDATE, 
                    string Original_BAS_REIDATE, 
                    string Original_BAS_WSTA, 
                    string Original_BAS_STS, 
                    string Original_BAS_POS, 
                    string Original_BAS_DUT, 
                    string Original_BAS_DEPT, 
                    string Original_BAS_RMK, 
                    string Original_BAS_POS_DT, 
                    string Original_BAS_DUT_DT, 
                    string Original_BAS_DEPT_DT, 
                    string Original_BAS_INTERN_DT, 
                    global::System.Nullable<global::System.DateTime> Original_DATASYS1, 
                    string Original_DATASYS2, 
                    string Original_DATASYS3) {
            return this.Update(Original_BAS_EMPNO, BAS_RESNO, BAS_NAME, BAS_CNAME, BAS_ENAME, BAS_FIX, BAS_ZIP, BAS_ADDR, BAS_RESIDENCE, BAS_HDPNO, BAS_TELNO, BAS_EMAIL, BAS_MIL_STA, BAS_MIL_MIL, BAS_MIL_RNK, BAS_MAR, BAS_ACC_BANK1, BAS_ACC_NAME1, BAS_ACC_NO1, BAS_ACC_BANK2, BAS_ACC_NAME2, BAS_ACC_NO2, BAS_CONT, BAS_INTERN, BAS_INTERN_NO, BAS_EMP_SDATE, BAS_EMP_EDATE, BAS_ENTDATE, BAS_RESDATE, BAS_LEVDATE, BAS_REIDATE, BAS_WSTA, BAS_STS, BAS_POS, BAS_DUT, BAS_DEPT, BAS_RMK, BAS_POS_DT, BAS_DUT_DT, BAS_DEPT_DT, BAS_INTERN_DT, DATASYS1, DATASYS2, DATASYS3, Original_BAS_EMPNO, Original_BAS_RESNO, Original_BAS_NAME, Original_BAS_CNAME, Original_BAS_ENAME, Original_BAS_FIX, Original_BAS_ZIP, Original_BAS_ADDR, Original_BAS_RESIDENCE, Original_BAS_HDPNO, Original_BAS_TELNO, Original_BAS_EMAIL, Original_BAS_MIL_STA, Original_BAS_MIL_MIL, Original_BAS_MIL_RNK, Original_BAS_MAR, Original_BAS_ACC_BANK1, Original_BAS_ACC_NAME1, Original_BAS_ACC_NO1, Original_BAS_ACC_BANK2, Original_BAS_ACC_NAME2, Original_BAS_ACC_NO2, Original_BAS_CONT, Original_BAS_INTERN, Original_BAS_INTERN_NO, Original_BAS_EMP_SDATE, Original_BAS_EMP_EDATE, Original_BAS_ENTDATE, Original_BAS_RESDATE, Original_BAS_LEVDATE, Original_BAS_REIDATE, Original_BAS_WSTA, Original_BAS_STS, Original_BAS_POS, Original_BAS_DUT, Original_BAS_DEPT, Original_BAS_RMK, Original_BAS_POS_DT, Original_BAS_DUT_DT, Original_BAS_DEPT_DT, Original_BAS_INTERN_DT, Original_DATASYS1, Original_DATASYS2, Original_DATASYS3);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class THRM_DEPT_LJMTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public THRM_DEPT_LJMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "THRM_DEPT_LJM";
            tableMapping.ColumnMappings.Add("DEPT_CODE", "DEPT_CODE");
            tableMapping.ColumnMappings.Add("DEPT_NAME", "DEPT_NAME");
            tableMapping.ColumnMappings.Add("DEPT_NAMES", "DEPT_NAMES");
            tableMapping.ColumnMappings.Add("DEPT_SEQ", "DEPT_SEQ");
            tableMapping.ColumnMappings.Add("DEPT_UPP", "DEPT_UPP");
            tableMapping.ColumnMappings.Add("DEPT_DEPT", "DEPT_DEPT");
            tableMapping.ColumnMappings.Add("DEPT_SDATE", "DEPT_SDATE");
            tableMapping.ColumnMappings.Add("DEPT_EDATE", "DEPT_EDATE");
            tableMapping.ColumnMappings.Add("DATASYS1", "DATASYS1");
            tableMapping.ColumnMappings.Add("DATASYS2", "DATASYS2");
            tableMapping.ColumnMappings.Add("DATASYS3", "DATASYS3");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""EDU"".""THRM_DEPT_LJM"" WHERE ((""DEPT_CODE"" = :Original_DEPT_CODE) AND ((:IsNull_DEPT_NAME = 1 AND ""DEPT_NAME"" IS NULL) OR (""DEPT_NAME"" = :Original_DEPT_NAME)) AND ((:IsNull_DEPT_NAMES = 1 AND ""DEPT_NAMES"" IS NULL) OR (""DEPT_NAMES"" = :Original_DEPT_NAMES)) AND ((:IsNull_DEPT_SEQ = 1 AND ""DEPT_SEQ"" IS NULL) OR (""DEPT_SEQ"" = :Original_DEPT_SEQ)) AND ((:IsNull_DEPT_UPP = 1 AND ""DEPT_UPP"" IS NULL) OR (""DEPT_UPP"" = :Original_DEPT_UPP)) AND ((:IsNull_DEPT_DEPT = 1 AND ""DEPT_DEPT"" IS NULL) OR (""DEPT_DEPT"" = :Original_DEPT_DEPT)) AND ((:IsNull_DEPT_SDATE = 1 AND ""DEPT_SDATE"" IS NULL) OR (""DEPT_SDATE"" = :Original_DEPT_SDATE)) AND ((:IsNull_DEPT_EDATE = 1 AND ""DEPT_EDATE"" IS NULL) OR (""DEPT_EDATE"" = :Original_DEPT_EDATE)) AND ((:IsNull_DATASYS1 = 1 AND ""DATASYS1"" IS NULL) OR (""DATASYS1"" = :Original_DATASYS1)) AND ((:IsNull_DATASYS2 = 1 AND ""DATASYS2"" IS NULL) OR (""DATASYS2"" = :Original_DATASYS2)) AND ((:IsNull_DATASYS3 = 1 AND ""DATASYS3"" IS NULL) OR (""DATASYS3"" = :Original_DATASYS3)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DEPT_CODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_CODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DEPT_NAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DEPT_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DEPT_NAMES";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_NAMES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DEPT_NAMES";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_NAMES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DEPT_SEQ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_SEQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DEPT_SEQ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_SEQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DEPT_UPP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_UPP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DEPT_UPP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_UPP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DEPT_DEPT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_DEPT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DEPT_DEPT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_DEPT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DEPT_SDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_SDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DEPT_SDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_SDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DEPT_EDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_EDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DEPT_EDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_EDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DATASYS1";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DATASYS1";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DATASYS2";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DATASYS2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DATASYS3";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DATASYS3";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""EDU"".""THRM_DEPT_LJM"" (""DEPT_CODE"", ""DEPT_NAME"", ""DEPT_NAMES"", ""DEPT_SEQ"", ""DEPT_UPP"", ""DEPT_DEPT"", ""DEPT_SDATE"", ""DEPT_EDATE"", ""DATASYS1"", ""DATASYS2"", ""DATASYS3"") VALUES (:DEPT_CODE, :DEPT_NAME, :DEPT_NAMES, :DEPT_SEQ, :DEPT_UPP, :DEPT_DEPT, :DEPT_SDATE, :DEPT_EDATE, :DATASYS1, :DATASYS2, :DATASYS3)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DEPT_CODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_CODE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DEPT_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_NAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DEPT_NAMES";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_NAMES";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DEPT_SEQ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_SEQ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DEPT_UPP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_UPP";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DEPT_DEPT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_DEPT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DEPT_SDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_SDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DEPT_EDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_EDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DATASYS1";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DATASYS2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DATASYS3";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS3";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""EDU"".""THRM_DEPT_LJM"" SET ""DEPT_CODE"" = :DEPT_CODE, ""DEPT_NAME"" = :DEPT_NAME, ""DEPT_NAMES"" = :DEPT_NAMES, ""DEPT_SEQ"" = :DEPT_SEQ, ""DEPT_UPP"" = :DEPT_UPP, ""DEPT_DEPT"" = :DEPT_DEPT, ""DEPT_SDATE"" = :DEPT_SDATE, ""DEPT_EDATE"" = :DEPT_EDATE, ""DATASYS1"" = :DATASYS1, ""DATASYS2"" = :DATASYS2, ""DATASYS3"" = :DATASYS3 WHERE ((""DEPT_CODE"" = :Original_DEPT_CODE) AND ((:IsNull_DEPT_NAME = 1 AND ""DEPT_NAME"" IS NULL) OR (""DEPT_NAME"" = :Original_DEPT_NAME)) AND ((:IsNull_DEPT_NAMES = 1 AND ""DEPT_NAMES"" IS NULL) OR (""DEPT_NAMES"" = :Original_DEPT_NAMES)) AND ((:IsNull_DEPT_SEQ = 1 AND ""DEPT_SEQ"" IS NULL) OR (""DEPT_SEQ"" = :Original_DEPT_SEQ)) AND ((:IsNull_DEPT_UPP = 1 AND ""DEPT_UPP"" IS NULL) OR (""DEPT_UPP"" = :Original_DEPT_UPP)) AND ((:IsNull_DEPT_DEPT = 1 AND ""DEPT_DEPT"" IS NULL) OR (""DEPT_DEPT"" = :Original_DEPT_DEPT)) AND ((:IsNull_DEPT_SDATE = 1 AND ""DEPT_SDATE"" IS NULL) OR (""DEPT_SDATE"" = :Original_DEPT_SDATE)) AND ((:IsNull_DEPT_EDATE = 1 AND ""DEPT_EDATE"" IS NULL) OR (""DEPT_EDATE"" = :Original_DEPT_EDATE)) AND ((:IsNull_DATASYS1 = 1 AND ""DATASYS1"" IS NULL) OR (""DATASYS1"" = :Original_DATASYS1)) AND ((:IsNull_DATASYS2 = 1 AND ""DATASYS2"" IS NULL) OR (""DATASYS2"" = :Original_DATASYS2)) AND ((:IsNull_DATASYS3 = 1 AND ""DATASYS3"" IS NULL) OR (""DATASYS3"" = :Original_DATASYS3)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DEPT_CODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_CODE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DEPT_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_NAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DEPT_NAMES";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_NAMES";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DEPT_SEQ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_SEQ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DEPT_UPP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_UPP";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DEPT_DEPT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_DEPT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DEPT_SDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_SDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DEPT_EDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_EDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DATASYS1";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DATASYS2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DATASYS3";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DEPT_CODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_CODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DEPT_NAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DEPT_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DEPT_NAMES";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_NAMES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DEPT_NAMES";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_NAMES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DEPT_SEQ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_SEQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DEPT_SEQ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_SEQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DEPT_UPP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_UPP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DEPT_UPP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_UPP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DEPT_DEPT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_DEPT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DEPT_DEPT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_DEPT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DEPT_SDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_SDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DEPT_SDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_SDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DEPT_EDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_EDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DEPT_EDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DEPT_EDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DATASYS1";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DATASYS1";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DATASYS2";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DATASYS2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DATASYS3";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DATASYS3";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::Project1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DEPT_CODE, DEPT_NAME, DEPT_NAMES, DEPT_SEQ, DEPT_UPP, DEPT_DEPT, DEPT_SDAT" +
                "E, DEPT_EDATE, DATASYS1, DATASYS2, DATASYS3 FROM EDU.THRM_DEPT_LJM";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.THRM_DEPT_LJMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.THRM_DEPT_LJMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.THRM_DEPT_LJMDataTable dataTable = new DataSet2.THRM_DEPT_LJMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.THRM_DEPT_LJMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "THRM_DEPT_LJM");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_DEPT_CODE, string Original_DEPT_NAME, string Original_DEPT_NAMES, string Original_DEPT_SEQ, string Original_DEPT_UPP, string Original_DEPT_DEPT, string Original_DEPT_SDATE, string Original_DEPT_EDATE, global::System.Nullable<global::System.DateTime> Original_DATASYS1, string Original_DATASYS2, string Original_DATASYS3) {
            if ((Original_DEPT_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_DEPT_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_DEPT_CODE));
            }
            if ((Original_DEPT_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_DEPT_NAME));
            }
            if ((Original_DEPT_NAMES == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DEPT_NAMES));
            }
            if ((Original_DEPT_SEQ == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_DEPT_SEQ));
            }
            if ((Original_DEPT_UPP == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_DEPT_UPP));
            }
            if ((Original_DEPT_DEPT == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_DEPT_DEPT));
            }
            if ((Original_DEPT_SDATE == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_DEPT_SDATE));
            }
            if ((Original_DEPT_EDATE == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_DEPT_EDATE));
            }
            if ((Original_DATASYS1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_DATASYS1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_DATASYS2 == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_DATASYS2));
            }
            if ((Original_DATASYS3 == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_DATASYS3));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string DEPT_CODE, string DEPT_NAME, string DEPT_NAMES, string DEPT_SEQ, string DEPT_UPP, string DEPT_DEPT, string DEPT_SDATE, string DEPT_EDATE, global::System.Nullable<global::System.DateTime> DATASYS1, string DATASYS2, string DATASYS3) {
            if ((DEPT_CODE == null)) {
                throw new global::System.ArgumentNullException("DEPT_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DEPT_CODE));
            }
            if ((DEPT_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DEPT_NAME));
            }
            if ((DEPT_NAMES == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DEPT_NAMES));
            }
            if ((DEPT_SEQ == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(DEPT_SEQ));
            }
            if ((DEPT_UPP == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DEPT_UPP));
            }
            if ((DEPT_DEPT == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(DEPT_DEPT));
            }
            if ((DEPT_SDATE == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(DEPT_SDATE));
            }
            if ((DEPT_EDATE == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(DEPT_EDATE));
            }
            if ((DATASYS1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(DATASYS1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((DATASYS2 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(DATASYS2));
            }
            if ((DATASYS3 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(DATASYS3));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string DEPT_CODE, 
                    string DEPT_NAME, 
                    string DEPT_NAMES, 
                    string DEPT_SEQ, 
                    string DEPT_UPP, 
                    string DEPT_DEPT, 
                    string DEPT_SDATE, 
                    string DEPT_EDATE, 
                    global::System.Nullable<global::System.DateTime> DATASYS1, 
                    string DATASYS2, 
                    string DATASYS3, 
                    string Original_DEPT_CODE, 
                    string Original_DEPT_NAME, 
                    string Original_DEPT_NAMES, 
                    string Original_DEPT_SEQ, 
                    string Original_DEPT_UPP, 
                    string Original_DEPT_DEPT, 
                    string Original_DEPT_SDATE, 
                    string Original_DEPT_EDATE, 
                    global::System.Nullable<global::System.DateTime> Original_DATASYS1, 
                    string Original_DATASYS2, 
                    string Original_DATASYS3) {
            if ((DEPT_CODE == null)) {
                throw new global::System.ArgumentNullException("DEPT_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DEPT_CODE));
            }
            if ((DEPT_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DEPT_NAME));
            }
            if ((DEPT_NAMES == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DEPT_NAMES));
            }
            if ((DEPT_SEQ == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(DEPT_SEQ));
            }
            if ((DEPT_UPP == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DEPT_UPP));
            }
            if ((DEPT_DEPT == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(DEPT_DEPT));
            }
            if ((DEPT_SDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(DEPT_SDATE));
            }
            if ((DEPT_EDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(DEPT_EDATE));
            }
            if ((DATASYS1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(DATASYS1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((DATASYS2 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(DATASYS2));
            }
            if ((DATASYS3 == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(DATASYS3));
            }
            if ((Original_DEPT_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_DEPT_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_DEPT_CODE));
            }
            if ((Original_DEPT_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_DEPT_NAME));
            }
            if ((Original_DEPT_NAMES == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_DEPT_NAMES));
            }
            if ((Original_DEPT_SEQ == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_DEPT_SEQ));
            }
            if ((Original_DEPT_UPP == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_DEPT_UPP));
            }
            if ((Original_DEPT_DEPT == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_DEPT_DEPT));
            }
            if ((Original_DEPT_SDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_DEPT_SDATE));
            }
            if ((Original_DEPT_EDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_DEPT_EDATE));
            }
            if ((Original_DATASYS1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(Original_DATASYS1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_DATASYS2 == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_DATASYS2));
            }
            if ((Original_DATASYS3 == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_DATASYS3));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string DEPT_NAME, 
                    string DEPT_NAMES, 
                    string DEPT_SEQ, 
                    string DEPT_UPP, 
                    string DEPT_DEPT, 
                    string DEPT_SDATE, 
                    string DEPT_EDATE, 
                    global::System.Nullable<global::System.DateTime> DATASYS1, 
                    string DATASYS2, 
                    string DATASYS3, 
                    string Original_DEPT_CODE, 
                    string Original_DEPT_NAME, 
                    string Original_DEPT_NAMES, 
                    string Original_DEPT_SEQ, 
                    string Original_DEPT_UPP, 
                    string Original_DEPT_DEPT, 
                    string Original_DEPT_SDATE, 
                    string Original_DEPT_EDATE, 
                    global::System.Nullable<global::System.DateTime> Original_DATASYS1, 
                    string Original_DATASYS2, 
                    string Original_DATASYS3) {
            return this.Update(Original_DEPT_CODE, DEPT_NAME, DEPT_NAMES, DEPT_SEQ, DEPT_UPP, DEPT_DEPT, DEPT_SDATE, DEPT_EDATE, DATASYS1, DATASYS2, DATASYS3, Original_DEPT_CODE, Original_DEPT_NAME, Original_DEPT_NAMES, Original_DEPT_SEQ, Original_DEPT_UPP, Original_DEPT_DEPT, Original_DEPT_SDATE, Original_DEPT_EDATE, Original_DATASYS1, Original_DATASYS2, Original_DATASYS3);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TIEAS_CD_LJMTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TIEAS_CD_LJMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TIEAS_CD_LJM";
            tableMapping.ColumnMappings.Add("CD_GRPCD", "CD_GRPCD");
            tableMapping.ColumnMappings.Add("CD_CODE", "CD_CODE");
            tableMapping.ColumnMappings.Add("CD_SEQ", "CD_SEQ");
            tableMapping.ColumnMappings.Add("CD_CODNMS", "CD_CODNMS");
            tableMapping.ColumnMappings.Add("CD_CODNM", "CD_CODNM");
            tableMapping.ColumnMappings.Add("CD_ADDINFO", "CD_ADDINFO");
            tableMapping.ColumnMappings.Add("CD_UPPER", "CD_UPPER");
            tableMapping.ColumnMappings.Add("CD_USE", "CD_USE");
            tableMapping.ColumnMappings.Add("CD_SDATE", "CD_SDATE");
            tableMapping.ColumnMappings.Add("CD_EDATE", "CD_EDATE");
            tableMapping.ColumnMappings.Add("DATASYS1", "DATASYS1");
            tableMapping.ColumnMappings.Add("DATASYS2", "DATASYS2");
            tableMapping.ColumnMappings.Add("DATASYS3", "DATASYS3");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""EDU"".""TIEAS_CD_LJM"" WHERE ((""CD_GRPCD"" = :Original_CD_GRPCD) AND (""CD_CODE"" = :Original_CD_CODE) AND ((:IsNull_CD_SEQ = 1 AND ""CD_SEQ"" IS NULL) OR (""CD_SEQ"" = :Original_CD_SEQ)) AND ((:IsNull_CD_CODNMS = 1 AND ""CD_CODNMS"" IS NULL) OR (""CD_CODNMS"" = :Original_CD_CODNMS)) AND ((:IsNull_CD_CODNM = 1 AND ""CD_CODNM"" IS NULL) OR (""CD_CODNM"" = :Original_CD_CODNM)) AND ((:IsNull_CD_ADDINFO = 1 AND ""CD_ADDINFO"" IS NULL) OR (""CD_ADDINFO"" = :Original_CD_ADDINFO)) AND ((:IsNull_CD_UPPER = 1 AND ""CD_UPPER"" IS NULL) OR (""CD_UPPER"" = :Original_CD_UPPER)) AND ((:IsNull_CD_USE = 1 AND ""CD_USE"" IS NULL) OR (""CD_USE"" = :Original_CD_USE)) AND ((:IsNull_CD_SDATE = 1 AND ""CD_SDATE"" IS NULL) OR (""CD_SDATE"" = :Original_CD_SDATE)) AND ((:IsNull_CD_EDATE = 1 AND ""CD_EDATE"" IS NULL) OR (""CD_EDATE"" = :Original_CD_EDATE)) AND ((:IsNull_DATASYS1 = 1 AND ""DATASYS1"" IS NULL) OR (""DATASYS1"" = :Original_DATASYS1)) AND ((:IsNull_DATASYS2 = 1 AND ""DATASYS2"" IS NULL) OR (""DATASYS2"" = :Original_DATASYS2)) AND ((:IsNull_DATASYS3 = 1 AND ""DATASYS3"" IS NULL) OR (""DATASYS3"" = :Original_DATASYS3)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_GRPCD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "CD_GRPCD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_CODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "CD_CODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CD_SEQ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CD_SEQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_SEQ";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CD_SEQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CD_CODNMS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "CD_CODNMS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_CODNMS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "CD_CODNMS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CD_CODNM";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "CD_CODNM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_CODNM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "CD_CODNM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CD_ADDINFO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "CD_ADDINFO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_ADDINFO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "CD_ADDINFO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CD_UPPER";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "CD_UPPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_UPPER";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "CD_UPPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CD_USE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CD_USE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_USE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CD_USE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CD_SDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "CD_SDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_SDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "CD_SDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CD_EDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "CD_EDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_EDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "CD_EDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DATASYS1";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DATASYS1";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DATASYS2";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DATASYS2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DATASYS3";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DATASYS3";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""EDU"".""TIEAS_CD_LJM"" (""CD_GRPCD"", ""CD_CODE"", ""CD_SEQ"", ""CD_CODNMS"", ""CD_CODNM"", ""CD_ADDINFO"", ""CD_UPPER"", ""CD_USE"", ""CD_SDATE"", ""CD_EDATE"", ""DATASYS1"", ""DATASYS2"", ""DATASYS3"") VALUES (:CD_GRPCD, :CD_CODE, :CD_SEQ, :CD_CODNMS, :CD_CODNM, :CD_ADDINFO, :CD_UPPER, :CD_USE, :CD_SDATE, :CD_EDATE, :DATASYS1, :DATASYS2, :DATASYS3)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_GRPCD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "CD_GRPCD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_CODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "CD_CODE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_SEQ";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CD_SEQ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_CODNMS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "CD_CODNMS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_CODNM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "CD_CODNM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_ADDINFO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "CD_ADDINFO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_UPPER";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "CD_UPPER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_USE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CD_USE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_SDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "CD_SDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_EDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "CD_EDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DATASYS1";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DATASYS2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DATASYS3";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS3";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""EDU"".""TIEAS_CD_LJM"" SET ""CD_GRPCD"" = :CD_GRPCD, ""CD_CODE"" = :CD_CODE, ""CD_SEQ"" = :CD_SEQ, ""CD_CODNMS"" = :CD_CODNMS, ""CD_CODNM"" = :CD_CODNM, ""CD_ADDINFO"" = :CD_ADDINFO, ""CD_UPPER"" = :CD_UPPER, ""CD_USE"" = :CD_USE, ""CD_SDATE"" = :CD_SDATE, ""CD_EDATE"" = :CD_EDATE, ""DATASYS1"" = :DATASYS1, ""DATASYS2"" = :DATASYS2, ""DATASYS3"" = :DATASYS3 WHERE ((""CD_GRPCD"" = :Original_CD_GRPCD) AND (""CD_CODE"" = :Original_CD_CODE) AND ((:IsNull_CD_SEQ = 1 AND ""CD_SEQ"" IS NULL) OR (""CD_SEQ"" = :Original_CD_SEQ)) AND ((:IsNull_CD_CODNMS = 1 AND ""CD_CODNMS"" IS NULL) OR (""CD_CODNMS"" = :Original_CD_CODNMS)) AND ((:IsNull_CD_CODNM = 1 AND ""CD_CODNM"" IS NULL) OR (""CD_CODNM"" = :Original_CD_CODNM)) AND ((:IsNull_CD_ADDINFO = 1 AND ""CD_ADDINFO"" IS NULL) OR (""CD_ADDINFO"" = :Original_CD_ADDINFO)) AND ((:IsNull_CD_UPPER = 1 AND ""CD_UPPER"" IS NULL) OR (""CD_UPPER"" = :Original_CD_UPPER)) AND ((:IsNull_CD_USE = 1 AND ""CD_USE"" IS NULL) OR (""CD_USE"" = :Original_CD_USE)) AND ((:IsNull_CD_SDATE = 1 AND ""CD_SDATE"" IS NULL) OR (""CD_SDATE"" = :Original_CD_SDATE)) AND ((:IsNull_CD_EDATE = 1 AND ""CD_EDATE"" IS NULL) OR (""CD_EDATE"" = :Original_CD_EDATE)) AND ((:IsNull_DATASYS1 = 1 AND ""DATASYS1"" IS NULL) OR (""DATASYS1"" = :Original_DATASYS1)) AND ((:IsNull_DATASYS2 = 1 AND ""DATASYS2"" IS NULL) OR (""DATASYS2"" = :Original_DATASYS2)) AND ((:IsNull_DATASYS3 = 1 AND ""DATASYS3"" IS NULL) OR (""DATASYS3"" = :Original_DATASYS3)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_GRPCD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "CD_GRPCD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_CODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "CD_CODE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_SEQ";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CD_SEQ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_CODNMS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "CD_CODNMS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_CODNM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "CD_CODNM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_ADDINFO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "CD_ADDINFO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_UPPER";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "CD_UPPER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_USE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CD_USE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_SDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "CD_SDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CD_EDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "CD_EDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DATASYS1";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DATASYS2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DATASYS3";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_GRPCD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "CD_GRPCD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_CODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "CD_CODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CD_SEQ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CD_SEQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_SEQ";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CD_SEQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CD_CODNMS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "CD_CODNMS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_CODNMS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "CD_CODNMS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CD_CODNM";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "CD_CODNM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_CODNM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "CD_CODNM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CD_ADDINFO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "CD_ADDINFO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_ADDINFO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "CD_ADDINFO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CD_UPPER";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "CD_UPPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_UPPER";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "CD_UPPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CD_USE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CD_USE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_USE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CD_USE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CD_SDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "CD_SDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_SDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "CD_SDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CD_EDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "CD_EDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CD_EDATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "CD_EDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DATASYS1";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DATASYS1";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DATASYS2";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DATASYS2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DATASYS3";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DATASYS3";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DATASYS3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::Project1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CD_GRPCD, CD_CODE, CD_SEQ, CD_CODNMS, CD_CODNM, CD_ADDINFO, CD_UPPER, CD_U" +
                "SE, CD_SDATE, CD_EDATE, DATASYS1, DATASYS2, DATASYS3 FROM EDU.TIEAS_CD_LJM";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet2.TIEAS_CD_LJMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet2.TIEAS_CD_LJMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet2.TIEAS_CD_LJMDataTable dataTable = new DataSet2.TIEAS_CD_LJMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2.TIEAS_CD_LJMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "TIEAS_CD_LJM");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_CD_GRPCD, string Original_CD_CODE, global::System.Nullable<short> Original_CD_SEQ, string Original_CD_CODNMS, string Original_CD_CODNM, string Original_CD_ADDINFO, string Original_CD_UPPER, string Original_CD_USE, string Original_CD_SDATE, string Original_CD_EDATE, global::System.Nullable<global::System.DateTime> Original_DATASYS1, string Original_DATASYS2, string Original_DATASYS3) {
            if ((Original_CD_GRPCD == null)) {
                throw new global::System.ArgumentNullException("Original_CD_GRPCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CD_GRPCD));
            }
            if ((Original_CD_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_CD_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_CD_CODE));
            }
            if ((Original_CD_SEQ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((short)(Original_CD_SEQ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_CD_CODNMS == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_CD_CODNMS));
            }
            if ((Original_CD_CODNM == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_CD_CODNM));
            }
            if ((Original_CD_ADDINFO == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_CD_ADDINFO));
            }
            if ((Original_CD_UPPER == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_CD_UPPER));
            }
            if ((Original_CD_USE == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_CD_USE));
            }
            if ((Original_CD_SDATE == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_CD_SDATE));
            }
            if ((Original_CD_EDATE == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_CD_EDATE));
            }
            if ((Original_DATASYS1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((System.DateTime)(Original_DATASYS1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_DATASYS2 == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_DATASYS2));
            }
            if ((Original_DATASYS3 == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_DATASYS3));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CD_GRPCD, string CD_CODE, global::System.Nullable<short> CD_SEQ, string CD_CODNMS, string CD_CODNM, string CD_ADDINFO, string CD_UPPER, string CD_USE, string CD_SDATE, string CD_EDATE, global::System.Nullable<global::System.DateTime> DATASYS1, string DATASYS2, string DATASYS3) {
            if ((CD_GRPCD == null)) {
                throw new global::System.ArgumentNullException("CD_GRPCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CD_GRPCD));
            }
            if ((CD_CODE == null)) {
                throw new global::System.ArgumentNullException("CD_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CD_CODE));
            }
            if ((CD_SEQ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((short)(CD_SEQ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((CD_CODNMS == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CD_CODNMS));
            }
            if ((CD_CODNM == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CD_CODNM));
            }
            if ((CD_ADDINFO == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CD_ADDINFO));
            }
            if ((CD_UPPER == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CD_UPPER));
            }
            if ((CD_USE == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(CD_USE));
            }
            if ((CD_SDATE == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(CD_SDATE));
            }
            if ((CD_EDATE == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CD_EDATE));
            }
            if ((DATASYS1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(DATASYS1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((DATASYS2 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(DATASYS2));
            }
            if ((DATASYS3 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(DATASYS3));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CD_GRPCD, 
                    string CD_CODE, 
                    global::System.Nullable<short> CD_SEQ, 
                    string CD_CODNMS, 
                    string CD_CODNM, 
                    string CD_ADDINFO, 
                    string CD_UPPER, 
                    string CD_USE, 
                    string CD_SDATE, 
                    string CD_EDATE, 
                    global::System.Nullable<global::System.DateTime> DATASYS1, 
                    string DATASYS2, 
                    string DATASYS3, 
                    string Original_CD_GRPCD, 
                    string Original_CD_CODE, 
                    global::System.Nullable<short> Original_CD_SEQ, 
                    string Original_CD_CODNMS, 
                    string Original_CD_CODNM, 
                    string Original_CD_ADDINFO, 
                    string Original_CD_UPPER, 
                    string Original_CD_USE, 
                    string Original_CD_SDATE, 
                    string Original_CD_EDATE, 
                    global::System.Nullable<global::System.DateTime> Original_DATASYS1, 
                    string Original_DATASYS2, 
                    string Original_DATASYS3) {
            if ((CD_GRPCD == null)) {
                throw new global::System.ArgumentNullException("CD_GRPCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CD_GRPCD));
            }
            if ((CD_CODE == null)) {
                throw new global::System.ArgumentNullException("CD_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CD_CODE));
            }
            if ((CD_SEQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(CD_SEQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((CD_CODNMS == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CD_CODNMS));
            }
            if ((CD_CODNM == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CD_CODNM));
            }
            if ((CD_ADDINFO == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CD_ADDINFO));
            }
            if ((CD_UPPER == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CD_UPPER));
            }
            if ((CD_USE == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(CD_USE));
            }
            if ((CD_SDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(CD_SDATE));
            }
            if ((CD_EDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(CD_EDATE));
            }
            if ((DATASYS1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(DATASYS1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((DATASYS2 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(DATASYS2));
            }
            if ((DATASYS3 == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(DATASYS3));
            }
            if ((Original_CD_GRPCD == null)) {
                throw new global::System.ArgumentNullException("Original_CD_GRPCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_CD_GRPCD));
            }
            if ((Original_CD_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_CD_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_CD_CODE));
            }
            if ((Original_CD_SEQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((short)(Original_CD_SEQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_CD_CODNMS == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_CD_CODNMS));
            }
            if ((Original_CD_CODNM == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_CD_CODNM));
            }
            if ((Original_CD_ADDINFO == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_CD_ADDINFO));
            }
            if ((Original_CD_UPPER == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_CD_UPPER));
            }
            if ((Original_CD_USE == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_CD_USE));
            }
            if ((Original_CD_SDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_CD_SDATE));
            }
            if ((Original_CD_EDATE == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_CD_EDATE));
            }
            if ((Original_DATASYS1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(Original_DATASYS1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_DATASYS2 == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_DATASYS2));
            }
            if ((Original_DATASYS3 == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_DATASYS3));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<short> CD_SEQ, 
                    string CD_CODNMS, 
                    string CD_CODNM, 
                    string CD_ADDINFO, 
                    string CD_UPPER, 
                    string CD_USE, 
                    string CD_SDATE, 
                    string CD_EDATE, 
                    global::System.Nullable<global::System.DateTime> DATASYS1, 
                    string DATASYS2, 
                    string DATASYS3, 
                    string Original_CD_GRPCD, 
                    string Original_CD_CODE, 
                    global::System.Nullable<short> Original_CD_SEQ, 
                    string Original_CD_CODNMS, 
                    string Original_CD_CODNM, 
                    string Original_CD_ADDINFO, 
                    string Original_CD_UPPER, 
                    string Original_CD_USE, 
                    string Original_CD_SDATE, 
                    string Original_CD_EDATE, 
                    global::System.Nullable<global::System.DateTime> Original_DATASYS1, 
                    string Original_DATASYS2, 
                    string Original_DATASYS3) {
            return this.Update(Original_CD_GRPCD, Original_CD_CODE, CD_SEQ, CD_CODNMS, CD_CODNM, CD_ADDINFO, CD_UPPER, CD_USE, CD_SDATE, CD_EDATE, DATASYS1, DATASYS2, DATASYS3, Original_CD_GRPCD, Original_CD_CODE, Original_CD_SEQ, Original_CD_CODNMS, Original_CD_CODNM, Original_CD_ADDINFO, Original_CD_UPPER, Original_CD_USE, Original_CD_SDATE, Original_CD_EDATE, Original_DATASYS1, Original_DATASYS2, Original_DATASYS3);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private THRM_BAS_LJMTableAdapter _tHRM_BAS_LJMTableAdapter;
        
        private THRM_DEPT_LJMTableAdapter _tHRM_DEPT_LJMTableAdapter;
        
        private TIEAS_CD_LJMTableAdapter _tIEAS_CD_LJMTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public THRM_BAS_LJMTableAdapter THRM_BAS_LJMTableAdapter {
            get {
                return this._tHRM_BAS_LJMTableAdapter;
            }
            set {
                this._tHRM_BAS_LJMTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public THRM_DEPT_LJMTableAdapter THRM_DEPT_LJMTableAdapter {
            get {
                return this._tHRM_DEPT_LJMTableAdapter;
            }
            set {
                this._tHRM_DEPT_LJMTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TIEAS_CD_LJMTableAdapter TIEAS_CD_LJMTableAdapter {
            get {
                return this._tIEAS_CD_LJMTableAdapter;
            }
            set {
                this._tIEAS_CD_LJMTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tHRM_BAS_LJMTableAdapter != null) 
                            && (this._tHRM_BAS_LJMTableAdapter.Connection != null))) {
                    return this._tHRM_BAS_LJMTableAdapter.Connection;
                }
                if (((this._tHRM_DEPT_LJMTableAdapter != null) 
                            && (this._tHRM_DEPT_LJMTableAdapter.Connection != null))) {
                    return this._tHRM_DEPT_LJMTableAdapter.Connection;
                }
                if (((this._tIEAS_CD_LJMTableAdapter != null) 
                            && (this._tIEAS_CD_LJMTableAdapter.Connection != null))) {
                    return this._tIEAS_CD_LJMTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tHRM_BAS_LJMTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tHRM_DEPT_LJMTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tIEAS_CD_LJMTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(DataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tHRM_BAS_LJMTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.THRM_BAS_LJM.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tHRM_BAS_LJMTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tHRM_DEPT_LJMTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.THRM_DEPT_LJM.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tHRM_DEPT_LJMTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tIEAS_CD_LJMTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TIEAS_CD_LJM.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tIEAS_CD_LJMTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(DataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tHRM_BAS_LJMTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.THRM_BAS_LJM.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tHRM_BAS_LJMTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tHRM_DEPT_LJMTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.THRM_DEPT_LJM.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tHRM_DEPT_LJMTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tIEAS_CD_LJMTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TIEAS_CD_LJM.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tIEAS_CD_LJMTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(DataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tIEAS_CD_LJMTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TIEAS_CD_LJM.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tIEAS_CD_LJMTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tHRM_DEPT_LJMTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.THRM_DEPT_LJM.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tHRM_DEPT_LJMTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tHRM_BAS_LJMTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.THRM_BAS_LJM.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tHRM_BAS_LJMTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(DataSet2 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tHRM_BAS_LJMTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tHRM_BAS_LJMTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._tHRM_DEPT_LJMTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tHRM_DEPT_LJMTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._tIEAS_CD_LJMTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tIEAS_CD_LJMTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager에 연결 정보가 없습니다. 각 TableAdapterManager TableAdapter 속성을 올바른 Tabl" +
                        "eAdapter 인스턴스로 설정하십시오.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("트랜잭션을 시작할 수 없습니다. 현재 데이터 연결에서 트랜잭션이 지원되지 않거나 현재 상태에서 트랜잭션을 시작할 수 없습니다.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tHRM_BAS_LJMTableAdapter != null)) {
                    revertConnections.Add(this._tHRM_BAS_LJMTableAdapter, this._tHRM_BAS_LJMTableAdapter.Connection);
                    this._tHRM_BAS_LJMTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._tHRM_BAS_LJMTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._tHRM_BAS_LJMTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tHRM_BAS_LJMTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tHRM_BAS_LJMTableAdapter.Adapter);
                    }
                }
                if ((this._tHRM_DEPT_LJMTableAdapter != null)) {
                    revertConnections.Add(this._tHRM_DEPT_LJMTableAdapter, this._tHRM_DEPT_LJMTableAdapter.Connection);
                    this._tHRM_DEPT_LJMTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._tHRM_DEPT_LJMTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._tHRM_DEPT_LJMTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tHRM_DEPT_LJMTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tHRM_DEPT_LJMTableAdapter.Adapter);
                    }
                }
                if ((this._tIEAS_CD_LJMTableAdapter != null)) {
                    revertConnections.Add(this._tIEAS_CD_LJMTableAdapter, this._tIEAS_CD_LJMTableAdapter.Connection);
                    this._tIEAS_CD_LJMTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._tIEAS_CD_LJMTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._tIEAS_CD_LJMTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tIEAS_CD_LJMTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tIEAS_CD_LJMTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tHRM_BAS_LJMTableAdapter != null)) {
                    this._tHRM_BAS_LJMTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._tHRM_BAS_LJMTableAdapter]));
                    this._tHRM_BAS_LJMTableAdapter.Transaction = null;
                }
                if ((this._tHRM_DEPT_LJMTableAdapter != null)) {
                    this._tHRM_DEPT_LJMTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._tHRM_DEPT_LJMTableAdapter]));
                    this._tHRM_DEPT_LJMTableAdapter.Transaction = null;
                }
                if ((this._tIEAS_CD_LJMTableAdapter != null)) {
                    this._tIEAS_CD_LJMTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._tIEAS_CD_LJMTableAdapter]));
                    this._tIEAS_CD_LJMTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591